{
  "packages": [
    {
      "version": "1.8.1",
      "config": {
        "type": "object",
        "$schema": "http://json-schema.org/schema#",
        "properties": {
          "nginx": {
            "type": "object",
            "properties": {
              "contentUrl": {
                "description": "URL of content that needs to be hosted.",
                "type": "string"
              },
              "mem": {
                "description": "Memory (MB) to allocate to each nginx task.",
                "default": 1024.0,
                "type": "number",
                "minimum": 256.0
              },
              "contentDir": {
                "description": "Path of directory, relative to sandbox, containing HTML code.",
                "type": "string"
              },
              "instances": {
                "description": "Number of instances to run.",
                "default": 1,
                "type": "integer",
                "minimum": 1
              },
              "minimumHealthCapacity": {
                "description": "Minimum health capacity.",
                "default": 0.5,
                "type": "number",
                "minimum": 0
              },
              "bridge": {
                "description": "Whether to use BRIDGE networking mode for Docker container. By default, this is false and HOST mode networking is used.",
                "default": false,
                "type": "boolean"
              },
              "role": {
                "description": "Deploy nginx only on nodes with this role.",
                "default": "*",
                "type": "string"
              },
              "cpus": {
                "description": "CPU shares to allocate to each nginx instance.",
                "default": 1,
                "type": "number",
                "minimum": 1
              },
              "name": {
                "description": "Name for this nginx application",
                "default": "nginx",
                "type": "string"
              },
              "maximumOverCapacity": {
                "description": "Maximum over capacity.",
                "default": 0.2,
                "type": "number",
                "minimum": 0
              }
            },
            "required": [
              "cpus",
              "mem",
              "instances",
              "name"
            ]
          }
        }
      },
      "maintainer": "support@nginx.com",
      "preInstallNotes": "Preparing to install nginx.",
      "marathon": {
        "v2AppMustacheTemplate": "ewogICJpZCI6ICIve3tuZ2lueC5uYW1lfX0iLAogICJpbnN0YW5jZXMiOiB7e25naW54Lmluc3RhbmNlc319LAogICJjcHVzIjoge3tuZ2lueC5jcHVzfX0sCiAgIm1lbSI6IHt7bmdpbngubWVtfX0sCiAgIm1haW50YWluZXIiOiAic3VwcG9ydEBtZXNvc3BoZXJlLmlvIiwKe3sjbmdpbnguY29udGVudERpcn19CiAgImNtZCI6ICJybSAtcmYgL3Vzci9zaGFyZS9uZ2lueC9odG1sICYmIGxuIC1zIC9tbnQvbWVzb3Mvc2FuZGJveC97e25naW54LmNvbnRlbnREaXJ9fSAvdXNyL3NoYXJlL25naW54L2h0bWwgJiYgbmdpbnggLWcgJ2RhZW1vbiBvZmY7JyIsCnt7L25naW54LmNvbnRlbnREaXJ9fSAgIAogICJjb250YWluZXIiOiB7CiAgICAidHlwZSI6ICJET0NLRVIiLAogICAgImRvY2tlciI6IHsKICAgICAgImltYWdlIjogInt7cmVzb3VyY2UuYXNzZXRzLmNvbnRhaW5lci5kb2NrZXIubmdpbngtZG9ja2VyfX0iLAogICAge3sjbmdpbnguYnJpZGdlfX0KICAgICAgIm5ldHdvcmsiOiAiQlJJREdFIiwgICAgCiAgICAgICJwb3J0TWFwcGluZ3MiOiBbCiAgICAgICAgeyAiY29udGFpbmVyUG9ydCI6IDgwLCAiaG9zdFBvcnQiOiAwIH0sCiAgICAgICAgeyAiY29udGFpbmVyUG9ydCI6IDQ0MywgImhvc3RQb3J0IjogMCB9CiAgICAgIF0KICAgIHt7L25naW54LmJyaWRnZX19CiAgICB7e15uZ2lueC5icmlkZ2V9fQogICAgICAibmV0d29yayI6ICJIT1NUIgogICAge3svbmdpbnguYnJpZGdlfX0KICAgIH0KICB9LAogICJoZWFsdGhDaGVja3MiOiBbCiAgICB7CiAgICAgICJwcm90b2NvbCI6ICJDT01NQU5EIiwKICAgICAgImNvbW1hbmQiOiB7ICJ2YWx1ZSI6ICJzZXJ2aWNlIG5naW54IHN0YXR1cyB8IGdyZXAgLXEgJ25naW54IGlzIHJ1bm5pbmcuJyJ9LAogICAgICAiZ3JhY2VQZXJpb2RTZWNvbmRzIjogMzAwLAogICAgICAiaW50ZXJ2YWxTZWNvbmRzIjogNjAsCiAgICAgICJ0aW1lb3V0U2Vjb25kcyI6IDIwLAogICAgICAibWF4Q29uc2VjdXRpdmVGYWlsdXJlcyI6IDMKICAgIH0KICBdLAp7eyNuZ2lueC5jb250ZW50VXJsfX0KICAidXJpcyI6WwogICAgInt7bmdpbnguY29udGVudFVybH19IgogIF0sICAKe3svbmdpbnguY29udGVudFVybH19CiAgImFjY2VwdGVkUmVzb3VyY2VSb2xlcyI6IFsKICAgICJ7e25naW54LnJvbGV9fSIKICBdLAogICJsYWJlbHMiOiB7CiAgICAiRENPU19TRVJWSUNFX05BTUUiOiAie3tuZ2lueC5uYW1lfX0iLAogICAgIkRDT1NfU0VSVklDRV9TQ0hFTUUiOiAiaHR0cCIsCiAgICAiRENPU19TRVJWSUNFX1BPUlRfSU5ERVgiOiAiMCIKICB9Cn0K"
      },
      "postInstallNotes": "Nginx has been installed.",
      "name": "nginx",
      "scm": "http://hg.nginx.org/nginx/",
      "licenses": [
        {
          "url": "http://nginx.org/LICENSE",
          "name": "BSD like"
        }
      ],
      "tags": [
        "proxy",
        "web-server",
        "cache"
      ],
      "packagingVersion": "2.0",
      "releaseVersion": 1,
      "description": "Nginx package",
      "resource": {
        "assets": {
          "container": {
            "docker": {
              "nginx-docker": "nginx:1.8.1"
            }
          }
        },
        "images": {
          "icon-large": "https://pbs.twimg.com/profile_images/567774844322713600/tYoVju31.png",
          "icon-small": "https://pbs.twimg.com/profile_images/567774844322713600/tYoVju31.png",
          "icon-medium": "https://pbs.twimg.com/profile_images/567774844322713600/tYoVju31.png"
        }
      },
      "postUninstallNotes": "Nginx was uninstalled successfully."
    },
    {
      "version": "1.8.1",
      "config": {
        "type": "object",
        "$schema": "http://json-schema.org/schema#",
        "properties": {
          "nginx": {
            "type": "object",
            "properties": {
              "contentUrl": {
                "description": "URL of content that needs to be hosted.",
                "type": "string"
              },
              "mem": {
                "description": "Memory (MB) to allocate to each nginx task.",
                "default": 1024.0,
                "type": "number",
                "minimum": 256.0
              },
              "contentDir": {
                "description": "Path of directory, relative to sandbox, containing HTML code.",
                "type": "string"
              },
              "marathon-uri": {
                "description": "URI of Marathon instance",
                "default": "http://master.mesos:8080",
                "type": "string"
              },
              "instances": {
                "description": "Number of instances to run.",
                "default": 1,
                "type": "integer",
                "minimum": 1
              },
              "minimumHealthCapacity": {
                "description": "Minimum health capacity.",
                "default": 0.5,
                "type": "number",
                "minimum": 0
              },
              "bridge": {
                "description": "Networking mode for Docker container. By default, it's false and HOST mode networking is used.",
                "default": false,
                "type": "boolean"
              },
              "role": {
                "description": "Deploy nginx only on nodes with this role.",
                "default": "*",
                "type": "string"
              },
              "cpus": {
                "description": "CPU shares to allocate to each nginx instance.",
                "default": 1,
                "type": "number",
                "minimum": 1
              },
              "name": {
                "description": "Name for this Nginx instance",
                "default": "nginx",
                "type": "string"
              },
              "maximumOverCapacity": {
                "description": "Maximum over capacity.",
                "default": 0.2,
                "type": "number",
                "minimum": 0
              }
            },
            "required": [
              "cpus",
              "mem",
              "instances",
              "name"
            ]
          }
        }
      },
      "maintainer": "support@nginx.com",
      "preInstallNotes": "Preparing to install nginx.",
      "marathon": {
        "v2AppMustacheTemplate": "ewogICJpZCI6ICIve3tuZ2lueC5uYW1lfX0iLAogICJpbnN0YW5jZXMiOiB7e25naW54Lmluc3RhbmNlc319LAogICJjcHVzIjoge3tuZ2lueC5jcHVzfX0sCiAgIm1lbSI6IHt7bmdpbngubWVtfX0sCiAgIm1haW50YWluZXIiOiAic3VwcG9ydEBtZXNvc3BoZXJlLmlvIiwKe3sjbmdpbnguY29udGVudERpcn19CiAgImNtZCI6ICJybSAtcmYgL3Vzci9zaGFyZS9uZ2lueC9odG1sICYmIGxuIC1zIC9tbnQvbWVzb3Mvc2FuZGJveC97e25naW54LmNvbnRlbnREaXJ9fSAvdXNyL3NoYXJlL25naW54L2h0bWwgJiYgbmdpbnggLWcgJ2RhZW1vbiBvZmY7JyIsCnt7L25naW54LmNvbnRlbnREaXJ9fSAgIAogICJjb250YWluZXIiOiB7CiAgICAidHlwZSI6ICJET0NLRVIiLAogICAgImRvY2tlciI6IHsKICAgICAgImltYWdlIjogInt7cmVzb3VyY2UuYXNzZXRzLmNvbnRhaW5lci5kb2NrZXIubmdpbngtZG9ja2VyfX0iLAogICAge3sjbmdpbnguYnJpZGdlfX0KICAgICAgIm5ldHdvcmsiOiAiQlJJREdFIiwgICAgCiAgICAgICJwb3J0TWFwcGluZ3MiOiBbCiAgICAgICAgeyAiY29udGFpbmVyUG9ydCI6IDgwLCAiaG9zdFBvcnQiOiAwIH0sCiAgICAgICAgeyAiY29udGFpbmVyUG9ydCI6IDQ0MywgImhvc3RQb3J0IjogMCB9CiAgICAgIF0KICAgIHt7L25naW54LmJyaWRnZX19CiAgICB7e15uZ2lueC5icmlkZ2V9fQogICAgICAibmV0d29yayI6ICJIT1NUIgogICAge3svbmdpbnguYnJpZGdlfX0KICAgIH0KICB9LAogICJoZWFsdGhDaGVja3MiOiBbCiAgICB7CiAgICAgICJwcm90b2NvbCI6ICJDT01NQU5EIiwKICAgICAgImNvbW1hbmQiOiB7ICJ2YWx1ZSI6ICJzZXJ2aWNlIG5naW54IHN0YXR1cyB8IGdyZXAgLXEgJ25naW54IGlzIHJ1bm5pbmcuJyJ9LAogICAgICAiZ3JhY2VQZXJpb2RTZWNvbmRzIjogMzAwLAogICAgICAiaW50ZXJ2YWxTZWNvbmRzIjogNjAsCiAgICAgICJ0aW1lb3V0U2Vjb25kcyI6IDIwLAogICAgICAibWF4Q29uc2VjdXRpdmVGYWlsdXJlcyI6IDMKICAgIH0KICBdLAp7eyNuZ2lueC5jb250ZW50VXJsfX0KICAidXJpcyI6WwogICAgInt7bmdpbnguY29udGVudFVybH19IgogIF0sICAKe3svbmdpbnguY29udGVudFVybH19CiAgImxhYmVscyI6IHsKICAgICJEQ09TX1NFUlZJQ0VfTkFNRSI6ICJ7e25naW54Lm5hbWV9fSIsCiAgICAiRENPU19TRVJWSUNFX1NDSEVNRSI6ICJodHRwIiwKICAgICJEQ09TX1NFUlZJQ0VfUE9SVF9JTkRFWCI6ICIwIgogIH0KfQo="
      },
      "postInstallNotes": "Nginx is getting installed.",
      "name": "nginx",
      "scm": "http://hg.nginx.org/nginx/",
      "licenses": [
        {
          "url": "http://nginx.org/LICENSE",
          "name": "BSD like"
        }
      ],
      "tags": [
        "proxy",
        "web-server",
        "cache"
      ],
      "packagingVersion": "2.0",
      "releaseVersion": 0,
      "description": "Nginx package",
      "resource": {
        "assets": {
          "container": {
            "docker": {
              "nginx-docker": "nginx:1.8.1"
            }
          }
        },
        "images": {
          "icon-large": "https://pbs.twimg.com/profile_images/567774844322713600/tYoVju31.png",
          "icon-small": "https://pbs.twimg.com/profile_images/567774844322713600/tYoVju31.png",
          "icon-medium": "https://pbs.twimg.com/profile_images/567774844322713600/tYoVju31.png"
        }
      },
      "postUninstallNotes": "Nginx is uninstalled successfully."
    },
    {
      "version": "1.0.5-2.2.5",
      "selected": true,
      "maintainer": "support@mesosphere.io",
      "minDcosReleaseVersion": "1.7",
      "config": {
        "additionalProperties": false,
        "id": "http://cassandra/docs/mesosphere.com",
        "properties": {
          "task": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/task",
            "properties": {
              "mem": {
                "description": "The memory used by the Cassandra cluster tasks in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/mem",
                "default": 256
              },
              "cpus": {
                "description": "The cpu shares used by the Cassandra service cluster tasks.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/task/cpus",
                "default": 0.5
              }
            },
            "description": "The Cassandra service cluster task configuration object.",
            "type": "object",
            "required": [
              "cpus",
              "mem"
            ]
          },
          "cassandra": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/cassandra",
            "properties": {
              "compaction_throughput_mb_per_sec": {
                "description": "Throttles compaction to the specified total throughput across the node. Compaction frequency varies with direct proportion to write throughput and is necessary to limit the SSTable size. The recommended value is 16 to 32 times the rate of write throughput (in MB/second).",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/compactionThroughputMbPerSec",
                "default": 16
              },
              "storage_port": {
                "description": "The port for inter-node communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/storagePort",
                "default": 7000
              },
              "native_transport_port": {
                "description": "The port for CQL communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/nativeTransportPort",
                "default": 9042
              },
              "tombstone_warn_threshold": {
                "description": "The maximum number of tombstones a query can scan before warning.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/tombstoneWarnThreshold",
                "default": 1000
              },
              "rpc_port": {
                "description": "The port for Thrift RPC communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rpcPort",
                "default": 9160
              },
              "commitlog_sync_period_in_ms": {
                "description": "The number of milliseconds between disk fsync calls.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/commitlogSyncPeriodInMs",
                "default": 10000
              },
              "read_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for read operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/readRequestTimeoutInMs",
                "default": 5000
              },
              "dynamic_snitch_reset_interval_in_ms": {
                "description": "The time, in ms, the snitch will wait before resetting node scores allowing bad nodes to recover.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchResetIntervalInMs",
                "default": 600000
              },
              "column_index_size_in_kb": {
                "description": "The granularity of the index of rows within a partition. For huge rows, decrease this setting to improve seek time. If you use key cache, be careful not to make this setting too large because key cache will be overwhelmed.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/columnIndexSizeInKb",
                "default": 64
              },
              "partitioner": {
                "description": "The partitioner used to distribute rows across the cluster. Murmur3Partitioner is the recommended setting. RandomPartitioner and ByteOrderedPartitioner are supported for legacy applications.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/partitioner",
                "default": "org.apache.cassandra.dht.Murmur3Partitioner"
              },
              "num_tokens": {
                "description": "The number of tokens assigned to each node.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/numTokens",
                "default": 256
              },
              "memtable_allocation_type": {
                "description": "The type of allocations for the Cassandra memtable. heap_buffers keep all data on the JVM heap. offheap_buffers may reduce heap utilization for large string or binary values. offheap_objects may improve heap size for small integers or UUIDs as well. Both off heap options will increase read latency.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/memtableAllocationType",
                "default": "heap_buffers"
              },
              "hinted_handoff_throttle_in_kb": {
                "description": "The maximum throttle per delivery thread in kilobytes per second.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/hintedHandoffThrottleInKb",
                "default": 1024
              },
              "write_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for write operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/writeRequestTimeoutInMs",
                "default": 2000
              },
              "truncate_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for truncate operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/truncateRequestTimeoutInMs",
                "default": 60000
              },
              "max_hints_delivery_threads": {
                "description": "The maximum number of delivery threads for hinted handoff.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/maxHintsDeliveryThreads",
                "default": 2
              },
              "dynamic_snitch_update_interval_in_ms": {
                "description": "The time, in ms, the snitch will wait before updating node scores.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchUpdateIntervalInMs",
                "default": 100
              },
              "batch_size_warn_threshold_in_kb": {
                "description": "Warn the operator on a batch size exceeding this value in kilobytes. Caution should be taken on increasing the size of this threshold as it can lead to node instability.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchSizeWarnThresholdInKb",
                "default": 5
              },
              "start_native_transport": {
                "description": "If true CQL is enabled.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/startNativeTransport",
                "default": true
              },
              "row_cache_size_in_mb": {
                "description": "Maximum size of the row cache in memory. Row cache can save more time than key_cache_size_in_mb, but is space-intensive because it contains the entire row. Use the row cache only for hot rows or static rows. 0 disables the row cache.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rowCacheSizeInMb",
                "default": 0
              },
              "concurrent_reads": {
                "description": "For workloads with more data than can fit in memory, the bottleneck is reads fetching data from disk. Setting to (16 times the number of drives) allows operations to queue low enough in the stack so that the OS and drives can reorder them.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentReads",
                "default": 16
              },
              "thrift_framed_transport_size_in_mb": {
                "description": "Frame size (maximum field length) for Thrift.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/thriftFramedTransportSizeInMb",
                "default": 15
              },
              "rpc_keepalive": {
                "description": "Enables or TCP keepalive for RPC connections.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rpcKeepalive",
                "default": true
              },
              "index_summary_resize_interval_in_minutes": {
                "description": "How frequently index summaries should be re-sampled in minutes. This is done periodically to redistribute memory from the fixed-size pool to SSTables proportional their recent read rates.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/indexSummaryResizeIntervalInMinutes",
                "default": 60
              },
              "internode_compression": {
                "description": "Controls whether traffic between nodes is compressed. all compresses all traffic. none compresses no traffic. dc compresses between datacenters.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/internodeCompression",
                "default": "all"
              },
              "cas_contention_timeout_in_ms": {
                "description": "The time for which the coordinator will retry CAS operations on the same row in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/casContentionTimeoutInMs",
                "default": 1000
              },
              "row_cache_save_period": {
                "description": "Duration in seconds that rows are saved in cache. 0 disables caching.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rowCacheSavePeriod",
                "default": 0
              },
              "jmx_port": {
                "description": "The JMX port that will be used to interface with the Cassandra application.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/jmxPort",
                "default": 7199
              },
              "start_rpc": {
                "description": "If true Thrift RPC is enable. This is deprecated by may be necessary for legacy applications.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/startRpc",
                "default": false
              },
              "hinted_handoff_enabled": {
                "description": "If true, hinted handoff is enabled for the cluster.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/hintedHandoffEnabled",
                "default": true
              },
              "concurrent_counter_writes": {
                "description": "Counter writes read the current values before incrementing and writing them back. The recommended value is (16 times the number of drives) .",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentCounterWrites",
                "default": 16
              },
              "concurrent_writes": {
                "description": "Writes in Cassandra are rarely I/O bound, so the ideal number of concurrent writes depends on the number of CPU cores in your system. The recommended value is 8 times the number of cpu cores.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentWrites",
                "default": 32
              },
              "request_timeout_in_ms": {
                "description": "The default timeout for all other requests in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/requestTimeoutInMs",
                "default": 10000
              },
              "key_cache_save_period": {
                "description": "The duration in seconds that keys are saved in cache. Saved caches greatly improve cold-start speeds and has relatively little effect on I/O.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/keyCacheSavePeriod",
                "default": 14400
              },
              "counter_write_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for counter write operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/counterWriteRequestTimeoutInMs",
                "default": 5000
              },
              "sstable_preemptive_open_interval_in_mb": {
                "description": "When compacting, the replacement opens SSTables before they are completely written and uses in place of the prior SSTables for any range previously written. This setting helps to smoothly transfer reads between the SSTables by reducing page cache churn and keeps hot rows hot.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/sstablePreemptiveOpenIntervalInMb",
                "default": 50
              },
              "range_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for range scans complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rangeRequestTimeoutInMs",
                "default": 10000
              },
              "dynamic_snitch_badness_threshold": {
                "description": "Sets the performance threshold for dynamically routing client requests away from a poorly performing node.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchBadnessThreshold",
                "default": 0.1
              },
              "tombstone_failure_threshold": {
                "description": "The maximum number of tombstones a query can scan before aborting.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/tombstoneFailureThreshold",
                "default": 100000
              },
              "batch_size_fail_threshold_in_kb": {
                "description": "Fail batch sizes exceeding this value in kilobytes. Caution should be taken on increasing the size of this threshold as it can lead to node instability.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchSizeFailThresholdInKb",
                "default": 50
              },
              "batchlog_replay_throttle_in_kb": {
                "description": "The total throttle for log replay in Kpbs.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchlogReplayThrottleInKb",
                "default": 1024
              },
              "max_hint_window_in_ms": {
                "description": "The maximum amount of time, in ms, that hints are generates hints for an unresponsive node.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/maxHintWindowInMs",
                "default": 10800000
              },
              "commitlog_segment_size_in_mb": {
                "description": "The size of each commit log segment in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/commitlogSegmentSizeInMb",
                "default": 32
              }
            },
            "description": "Cassandra service configuration properties",
            "type": "object",
            "required": [
              "jmx_port",
              "num_tokens",
              "max_hint_window_in_ms",
              "hinted_handoff_enabled",
              "hinted_handoff_throttle_in_kb",
              "max_hints_delivery_threads",
              "batchlog_replay_throttle_in_kb",
              "partitioner",
              "key_cache_save_period",
              "row_cache_size_in_mb",
              "row_cache_save_period",
              "commitlog_sync_period_in_ms",
              "commitlog_segment_size_in_mb",
              "concurrent_reads",
              "concurrent_writes",
              "concurrent_counter_writes",
              "memtable_allocation_type",
              "index_summary_resize_interval_in_minutes",
              "storage_port",
              "start_native_transport",
              "native_transport_port",
              "start_rpc",
              "rpc_port",
              "rpc_keepalive",
              "thrift_framed_transport_size_in_mb",
              "tombstone_warn_threshold",
              "tombstone_failure_threshold",
              "column_index_size_in_kb",
              "batch_size_warn_threshold_in_kb",
              "batch_size_fail_threshold_in_kb",
              "compaction_throughput_mb_per_sec",
              "sstable_preemptive_open_interval_in_mb",
              "read_request_timeout_in_ms",
              "range_request_timeout_in_ms",
              "write_request_timeout_in_ms",
              "counter_write_request_timeout_in_ms",
              "cas_contention_timeout_in_ms",
              "truncate_request_timeout_in_ms",
              "request_timeout_in_ms",
              "dynamic_snitch_update_interval_in_ms",
              "dynamic_snitch_reset_interval_in_ms",
              "dynamic_snitch_badness_threshold",
              "internode_compression"
            ]
          },
          "service": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/service",
            "properties": {
              "mem": {
                "description": "The memory used by the Cassandra service scheduler in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/mem",
                "default": 2048
              },
              "api_port": {
                "description": "The port that the Cassandra service API will accept on.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/api_port",
                "default": 9000
              },
              "heap": {
                "description": "The JVM heap used by the Cassandra service scheduler in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/heap",
                "default": 1024
              },
              "user": {
                "description": "The user that the service will run as.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/user",
                "default": "root"
              },
              "placement_strategy": {
                "description": "The placement strategy for Cassandra nodes. This should always be NODE.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/placement_strategy",
                "default": "NODE"
              },
              "cpus": {
                "description": "The cpu shares used by the Cassandra service scheduler.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/service/cpus",
                "default": 0.5
              },
              "name": {
                "description": "The name of the Cassandra service instance.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/name",
                "default": "cassandra"
              }
            },
            "description": "DC/OS service configuration properties",
            "type": "object",
            "required": [
              "name",
              "user",
              "cpus",
              "mem",
              "heap",
              "api_port",
              "placement_strategy"
            ]
          },
          "executor": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/executor",
            "properties": {
              "heap": {
                "description": "The JVM heap used by the Cassandra service executor in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/heap",
                "default": 768
              },
              "disk": {
                "description": "The amount of disk used by the Cassandra service executor in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/heap",
                "default": 1024
              },
              "mem": {
                "description": "The memory used by the Cassandra service executor in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/mem",
                "default": 1024
              },
              "api_port": {
                "description": "The port that the Cassandra executor API will accept on.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/api_port",
                "default": 9001
              },
              "cpus": {
                "description": "The cpu shares used by the Cassandra service executor.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/executor/cpus",
                "default": 0.5
              }
            },
            "description": "The Cassandra service executor configuration object.",
            "type": "object",
            "required": [
              "cpus",
              "mem",
              "heap",
              "disk",
              "api_port"
            ]
          },
          "nodes": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/node",
            "properties": {
              "disk": {
                "description": "The amount of disk, in MB, allocated to the Cassandra process.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/disk",
                "default": 10240
              },
              "mem": {
                "description": "The amount of memory, in MB, allocated to the Cassandra process.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/mem",
                "default": 4096
              },
              "disk_type": {
                "description": "Disk type to be used for storing Cassandra data. See documentation. [ROOT, MOUNT]",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/node/diskType",
                "default": "ROOT"
              },
              "count": {
                "description": "The number of Cassandra nodes in the cluster.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/count",
                "default": 3
              },
              "heap": {
                "additionalProperties": false,
                "id": "http://cassandra/docs/mesosphere.com/node/heap",
                "properties": {
                  "new": {
                    "description": "The amount of JVM new generation heap, in MB, allocated to the Cassandra process.",
                    "type": "integer",
                    "id": "http://cassandra/docs/mesosphere.com/node/heap/new",
                    "default": 100
                  },
                  "size": {
                    "description": "The amount of JVM heap, in MB, allocated to the Cassandra process.",
                    "type": "integer",
                    "id": "http://cassandra/docs/mesosphere.com/node/heap/size",
                    "default": 2048
                  }
                },
                "description": "The Cassandra process JVM heap configuration object.",
                "type": "object",
                "required": [
                  "size",
                  "new"
                ]
              },
              "cpus": {
                "description": "The number of cpu shares allocated to the Cassandra process.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/node/cpus",
                "default": 0.5
              },
              "seeds": {
                "description": "The number of Cassandra seed nodes in the cluster",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/seeds",
                "default": 2
              }
            },
            "description": "Cassandra node configuration properties",
            "type": "object",
            "required": [
              "cpus",
              "mem",
              "disk",
              "heap",
              "count",
              "seeds"
            ]
          }
        },
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "required": [
          "service",
          "nodes",
          "cassandra",
          "executor",
          "task"
        ]
      },
      "postInstallNotes": "DC/OS Cassandra Service is being installed.\n\n\tDocumentation: https://docs.mesosphere.com/usage/services/cassandra/\n\tIssues: https://docs.mesosphere.com/support/",
      "name": "cassandra",
      "marathon": {
        "v2AppMustacheTemplate": ""
      },
      "tags": [
        "data",
        "database",
        "nosql"
      ],
      "packagingVersion": "3.0",
      "releaseVersion": 7,
      "description": "Apache Cassandra running on DC/OS",
      "resource": {
        "assets": {
          "uris": {
            "scheduler-zip": "https://downloads.mesosphere.com/cassandra/assets/1.0.4-2.2.5/scheduler.zip",
            "jre-tar-gz": "https://downloads.mesosphere.com/cassandra/assets/1.0.4-2.2.5/server-jre-8u74-linux-x64.tar.gz",
            "apache-cassandra-bin-tar-gz": "https://downloads.mesosphere.com/cassandra/assets/1.0.4-2.2.5/apache-cassandra-2.2.5-bin.tar.gz",
            "executor-zip": "https://downloads.mesosphere.com/cassandra/assets/1.0.4-2.2.5/executor.zip"
          }
        },
        "images": {
          "icon-large": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-large.png",
          "icon-small": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-small.png",
          "icon-medium": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-medium.png"
        }
      },
      "framework": true,
      "pip": [
        "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.4-2.2.5/dcos-cassandra-0.1.0.tar.gz"
      ],
      "postUninstallNotes": "DC/OS Cassandra Service has been uninstalled.\nPlease follow the instructions at https://docs.mesosphere.com/usage/services/cassandra/#uninstall to remove any persistent state if required."
    },
    {
      "version": "0.2.0-2",
      "config": {
        "type": "object",
        "properties": {
          "mesos": {
            "description": "Mesos specific configuration properties",
            "type": "object",
            "properties": {
              "master": {
                "description": "The URL of the Mesos master. The format is a comma-delimited list of hosts like zk://host1:port,host2:port/mesos. If using ZooKeeper, pay particular attention to the leading zk:// and trailing /mesos! If not using ZooKeeper, standard host:port patterns, like localhost:5050 or 10.0.0.5:5050,10.0.0.6:5050, are also acceptable.",
                "default": "zk://master.mesos:2181/mesos",
                "type": "string"
              }
            },
            "required": [
              "master"
            ]
          },
          "cassandra": {
            "description": "Cassandra Framework Configuration Properties",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "node-count": {
                "description": "The number of nodes in the ring for the framework to run.",
                "type": "integer",
                "default": 3,
                "minimum": 1
              },
              "dc": {
                "description": "Cassandra multi Datacenter Configuration Properties",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "default-dc": {
                    "description": "Default value to be set for dc name in the GossipingPropertyFileSnitch",
                    "type": "string",
                    "default": "DC1"
                  },
                  "default-rack": {
                    "description": "Default value to be set for rack name in the GossipingPropertyFileSnitch",
                    "type": "string",
                    "default": "RAC1"
                  },
                  "external-dcs": {
                    "description": "Name and URL for another instance of Cassandra DCOS Service",
                    "additionalProperties": false,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "url"
                      ]
                    }
                  }
                },
                "required": [
                  "default-dc",
                  "default-rack"
                ]
              },
              "zk-timeout-ms": {
                "description": "Timeout for ZooKeeper in milliseconds.",
                "type": "integer",
                "default": 10000,
                "minimum": 0
              },
              "zk": {
                "description": "ZooKeeper URL for storing state. Format: zk://host1:port1,host2:port2,.../path (can have nested directories)",
                "type": "string"
              },
              "cluster-name": {
                "description": "The name of the framework to register with mesos. Will also be used as the cluster name in Cassandra",
                "type": "string",
                "default": "dcos"
              },
              "health-check-interval-seconds": {
                "description": "The interval in seconds that the framework should check the health of each Cassandra Server instance.",
                "type": "integer",
                "default": 60,
                "minimum": 15
              },
              "seed-count": {
                "description": "The number of seed nodes in the ring for the framework to run.",
                "type": "integer",
                "default": 2,
                "minimum": 1
              },
              "bootstrap-grace-time-seconds": {
                "description": "The minimum number of seconds to wait between starting each node. Setting this too low could result in the ring not bootstrapping correctly.",
                "type": "integer",
                "default": 120,
                "minimum": 15
              },
              "data-directory": {
                "description": "The location on disk where Cassandra will be configured to write it's data.",
                "type": "string",
                "default": "."
              },
              "resources": {
                "description": "Cassandra Server Resources Configuration Properties",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "disk": {
                    "description": "Disk (MB) to allocate to each Cassandra Server instance.",
                    "type": "integer",
                    "default": 16,
                    "minimum": 0
                  },
                  "mem": {
                    "description": "Memory (MB) to allocate to each Cassandra Server instance.",
                    "type": "integer",
                    "default": 768,
                    "minimum": 0
                  },
                  "heap-mb": {
                    "description": "The amount of memory in MB that are allocated to each Cassandra Server Instance. This value should be smaller than 'cassandra.resources.mem'. The remaining difference will be used for memory mapped files and other off-heap memory requirements.",
                    "type": "integer",
                    "minimum": 0
                  },
                  "cpus": {
                    "description": "CPU shares to allocate to each Cassandra Server Instance.",
                    "type": "number",
                    "default": 0.1,
                    "minimum": 0.0
                  }
                },
                "required": [
                  "cpus",
                  "mem",
                  "disk"
                ]
              },
              "framework": {
                "description": "Framework Scheduler specific Configuration Properties",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "mem": {
                    "description": "Memory (MB) to allocate to each Cassandra framework instance.",
                    "default": 512.0,
                    "type": "number",
                    "minimum": 512.0
                  },
                  "authentication": {
                    "description": "Framework Scheduler Authentication Configuration Properties",
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "description": "Whether framework authentication should be used",
                        "type": "boolean",
                        "default": false
                      },
                      "principal": {
                        "description": "The Mesos principal used for authentication.",
                        "type": "string"
                      },
                      "secret": {
                        "description": "The path to the Mesos secret file containing the authentication secret.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "enabled"
                    ]
                  },
                  "instances": {
                    "description": "Number of Cassandra framework instances to run.",
                    "default": 1,
                    "type": "integer",
                    "minimum": 0
                  },
                  "failover-timeout-seconds": {
                    "description": "The failover_timeout for Mesos in seconds. If the framework instance has not re-registered with Mesos this long after a failover, Mesos will shut down all running tasks started by the framework.",
                    "type": "integer",
                    "default": 604800,
                    "minimum": 0
                  },
                  "cpus": {
                    "description": "CPU shares to allocate to each Cassandra framework instance.",
                    "default": 0.5,
                    "type": "number"
                  },
                  "role": {
                    "description": "Mesos role for this framework.",
                    "type": "string",
                    "default": "*"
                  }
                },
                "required": [
                  "instances",
                  "cpus",
                  "mem",
                  "failover-timeout-seconds",
                  "role",
                  "authentication"
                ]
              }
            },
            "required": [
              "framework",
              "cluster-name",
              "zk-timeout-ms",
              "node-count",
              "seed-count",
              "health-check-interval-seconds",
              "bootstrap-grace-time-seconds",
              "data-directory",
              "resources"
            ]
          }
        },
        "required": [
          "mesos",
          "cassandra"
        ]
      },
      "selected": true,
      "tags": [
        "data",
        "database",
        "nosql"
      ],
      "preInstallNotes": "The Apache Cassandra DCOS Service implementation is alpha and there may be bugs, incomplete features, incorrect documentation or other discrepancies.\nThe default configuration requires 3 nodes each with 0.3 CPU shares, 1184MB of memory and 272MB of disk.",
      "postUninstallNotes": "The Apache Cassandra DCOS Service has been uninstalled and will no longer run.\nPlease follow the instructions at https://docs.mesosphere.com/usage/services/cassandra/#uninstall to clean up any persisted state",
      "marathon": {
        "v2AppMustacheTemplate": "ewogICJpZCI6ICIvY2Fzc2FuZHJhL3t7Y2Fzc2FuZHJhLmNsdXN0ZXItbmFtZX19IiwKICAiY21kIjogIiQocHdkKS9qcmUqL2Jpbi9qYXZhICRKQVZBX09QVFMgLWNsYXNzcGF0aCBjYXNzYW5kcmEtbWVzb3MtZnJhbWV3b3JrLmphciBpby5tZXNvc3BoZXJlLm1lc29zLmZyYW1ld29ya3MuY2Fzc2FuZHJhLmZyYW1ld29yay5NYWluIiwKICAiaW5zdGFuY2VzIjoge3tjYXNzYW5kcmEuZnJhbWV3b3JrLmluc3RhbmNlc319LAogICJjcHVzIjoge3tjYXNzYW5kcmEuZnJhbWV3b3JrLmNwdXN9fSwKICAibWVtIjoge3tjYXNzYW5kcmEuZnJhbWV3b3JrLm1lbX19LAogICJwb3J0cyI6IFsKICAgIDAKICBdLAogICJ1cmlzIjogWwogICAgInt7cmVzb3VyY2UuYXNzZXRzLnVyaXMuY2Fzc2FuZHJhLW1lc29zLTAtMi0wLTEtdGFyLWd6fX0iLAogICAgInt7cmVzb3VyY2UuYXNzZXRzLnVyaXMuanJlLTd1NzYtbGludXgteDY0LXRhci1nen19IgogIF0sCiAgImhlYWx0aENoZWNrcyI6IFsKICAgIHsKICAgICAgImdyYWNlUGVyaW9kU2Vjb25kcyI6IDEyMCwKICAgICAgImludGVydmFsU2Vjb25kcyI6IDE1LAogICAgICAibWF4Q29uc2VjdXRpdmVGYWlsdXJlcyI6IDAsCiAgICAgICJwYXRoIjogIi9oZWFsdGgvY2x1c3RlciIsCiAgICAgICJwb3J0SW5kZXgiOiAwLAogICAgICAicHJvdG9jb2wiOiAiSFRUUCIsCiAgICAgICJ0aW1lb3V0U2Vjb25kcyI6IDUKICAgIH0sCiAgICB7CiAgICAgICJncmFjZVBlcmlvZFNlY29uZHMiOiAxMjAsCiAgICAgICJpbnRlcnZhbFNlY29uZHMiOiAzMCwKICAgICAgIm1heENvbnNlY3V0aXZlRmFpbHVyZXMiOiAzLAogICAgICAicGF0aCI6ICIvaGVhbHRoL3Byb2Nlc3MiLAogICAgICAicG9ydEluZGV4IjogMCwKICAgICAgInByb3RvY29sIjogIkhUVFAiLAogICAgICAidGltZW91dFNlY29uZHMiOiA1CiAgICB9CiAgXSwKICAibGFiZWxzIjogewogICAgIkRDT1NfUEFDS0FHRV9GUkFNRVdPUktfTkFNRSI6ICJjYXNzYW5kcmEue3tjYXNzYW5kcmEuY2x1c3Rlci1uYW1lfX0iCiAgfSwKICAiZW52IjogewogICAgIk1FU09TX1pLIjogInt7bWVzb3MubWFzdGVyfX0iCiAgICAsIkpBVkFfT1BUUyI6ICItWG1zMjU2bSAtWG14MjU2bSIKICAgICwiQ0FTU0FORFJBX0NMVVNURVJfTkFNRSI6ICJ7e2Nhc3NhbmRyYS5jbHVzdGVyLW5hbWV9fSIKICAgICwiQ0FTU0FORFJBX05PREVfQ09VTlQiOiAie3tjYXNzYW5kcmEubm9kZS1jb3VudH19IgogICAgLCJDQVNTQU5EUkFfU0VFRF9DT1VOVCI6ICJ7e2Nhc3NhbmRyYS5zZWVkLWNvdW50fX0iCiAgICAsIkNBU1NBTkRSQV9SRVNPVVJDRV9DUFVfQ09SRVMiOiAie3tjYXNzYW5kcmEucmVzb3VyY2VzLmNwdXN9fSIKICAgICwiQ0FTU0FORFJBX1JFU09VUkNFX01FTV9NQiI6ICJ7e2Nhc3NhbmRyYS5yZXNvdXJjZXMubWVtfX0iCiAgICAsIkNBU1NBTkRSQV9SRVNPVVJDRV9ESVNLX01CIjogInt7Y2Fzc2FuZHJhLnJlc291cmNlcy5kaXNrfX0iCiAgICAsIkNBU1NBTkRSQV9GQUlMT1ZFUl9USU1FT1VUX1NFQ09ORFMiOiAie3tjYXNzYW5kcmEuZnJhbWV3b3JrLmZhaWxvdmVyLXRpbWVvdXQtc2Vjb25kc319IgogICAgLCJDQVNTQU5EUkFfREFUQV9ESVJFQ1RPUlkiOiAie3tjYXNzYW5kcmEuZGF0YS1kaXJlY3Rvcnl9fSIKICAgICwiQ0FTU0FORFJBX0hFQUxUSF9DSEVDS19JTlRFUlZBTF9TRUNPTkRTIjogInt7Y2Fzc2FuZHJhLmhlYWx0aC1jaGVjay1pbnRlcnZhbC1zZWNvbmRzfX0iCiAgICAsIkNBU1NBTkRSQV9aS19USU1FT1VUX01TIjogInt7Y2Fzc2FuZHJhLnprLXRpbWVvdXQtbXN9fSIKICAgICwiQ0FTU0FORFJBX0JPT1RTVFJBUF9HUkFDRV9USU1FX1NFQ09ORFMiOiAie3tjYXNzYW5kcmEuYm9vdHN0cmFwLWdyYWNlLXRpbWUtc2Vjb25kc319IgogICAgLCJDQVNTQU5EUkFfRlJBTUVXT1JLX01FU09TX1JPTEUiOiAie3tjYXNzYW5kcmEuZnJhbWV3b3JrLnJvbGV9fSIKICAgICwiQ0FTU0FORFJBX0RFRkFVTFRfREMiOiAie3tjYXNzYW5kcmEuZGMuZGVmYXVsdC1kY319IgogICAgLCJDQVNTQU5EUkFfREVGQVVMVF9SQUNLIjogInt7Y2Fzc2FuZHJhLmRjLmRlZmF1bHQtcmFja319IgogICAgLCJNRVNPU19BVVRIRU5USUNBVEUiOiAie3tjYXNzYW5kcmEuZnJhbWV3b3JrLmF1dGhlbnRpY2F0aW9uLmVuYWJsZWR9fSIKe3sjY2Fzc2FuZHJhLmRjLmV4dGVybmFsLWRjc319CiAgICAsIkNBU1NBTkRSQV9FWFRFUk5BTF9EQ197e25hbWV9fSI6ICJ7e3VybH19Igp7ey9jYXNzYW5kcmEuZGMuZXh0ZXJuYWwtZGNzfX0Ke3sjY2Fzc2FuZHJhLnprfX0ge3shIGlmIHRoZSBmdWxsIGNhc3NhbmRyYSB6ayB1cmwgaGFzIGJlZW4gc3BlY2lmaWVkIHVzZSBpdCB9fQogICAgLCJDQVNTQU5EUkFfWksiOiAie3tjYXNzYW5kcmEuemt9fSIKe3svY2Fzc2FuZHJhLnprfX0Ke3teY2Fzc2FuZHJhLnprfX0ge3shIGVsc2UsIGNyZWF0ZSBhIHVybCBiYXNlZCBvbiBjb252ZW50aW9uIGFuZCBjbHVzdGVyIG5hbWUgfX0KICAgICwiQ0FTU0FORFJBX1pLIjogInprOi8vbWFzdGVyLm1lc29zOjIxODEvY2Fzc2FuZHJhLW1lc29zL3t7Y2Fzc2FuZHJhLmNsdXN0ZXItbmFtZX19Igp7ey9jYXNzYW5kcmEuemt9fQp7eyNjYXNzYW5kcmEucmVzb3VyY2UuaGVhcC1tYn19CiwiQ0FTU0FORFJBX1JFU09VUkNFX0hFQVBfTUIiOiAie3tjYXNzYW5kcmEucmVzb3VyY2UuaGVhcC1tYn19Igp7ey9jYXNzYW5kcmEucmVzb3VyY2UuaGVhcC1tYn19Cnt7I2Nhc3NhbmRyYS5mcmFtZXdvcmsuYXV0aGVudGljYXRpb24ucHJpbmNpcGFsfX0KICAgICwiREVGQVVMVF9QUklOQ0lQQUwiOiAie3tjYXNzYW5kcmEuZnJhbWV3b3JrLmF1dGhlbnRpY2F0aW9uLnByaW5jaXBhbH19Igp7ey9jYXNzYW5kcmEuZnJhbWV3b3JrLmF1dGhlbnRpY2F0aW9uLnByaW5jaXBhbH19Cnt7I2Nhc3NhbmRyYS5mcmFtZXdvcmsuYXV0aGVudGljYXRpb24uc2VjcmV0fX0KICAgICwiREVGQVVMVF9TRUNSRVQiOiAie3tjYXNzYW5kcmEuZnJhbWV3b3JrLmF1dGhlbnRpY2F0aW9uLnNlY3JldH19Igp7ey9jYXNzYW5kcmEuZnJhbWV3b3JrLmF1dGhlbnRpY2F0aW9uLnNlY3JldH19CiAgfQp9Cg=="
      },
      "postInstallNotes": "Thank you for installing the Apache Cassandra DCOS Service.\n\n\tDocumentation: http://mesosphere.github.io/cassandra-mesos/\n\tIssues: https://github.com/mesosphere/cassandra-mesos/issues",
      "scm": "https://github.com/mesosphere/cassandra-mesos.git",
      "licenses": [
        {
          "url": "https://github.com/mesosphere/cassandra-mesos/blob/master/LICENSE.txt",
          "name": "Apache License Version 2.0"
        }
      ],
      "name": "cassandra",
      "packagingVersion": "2.0",
      "releaseVersion": 1,
      "description": "Apache Cassandra running on Apache Mesos",
      "resource": {
        "assets": {
          "uris": {
            "cassandra-mesos-0-2-0-1-tar-gz": "https://downloads.mesosphere.com/cassandra-mesos/artifacts/0.2.0-1/cassandra-mesos-0.2.0-1.tar.gz",
            "jre-7u76-linux-x64-tar-gz": "https://downloads.mesosphere.com/java/jre-7u76-linux-x64.tar.gz"
          }
        },
        "images": {
          "icon-large": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-large.png",
          "icon-small": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-small.png",
          "icon-medium": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-medium.png"
        }
      },
      "framework": true,
      "maintainer": "support@mesosphere.io"
    },
    {
      "version": "1.0.5-2.2.5",
      "selected": true,
      "maintainer": "support@mesosphere.io",
      "minDcosReleaseVersion": "1.7",
      "config": {
        "additionalProperties": false,
        "id": "http://cassandra/docs/mesosphere.com",
        "properties": {
          "task": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/task",
            "properties": {
              "mem": {
                "description": "The memory used by the Cassandra cluster tasks in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/mem",
                "default": 256
              },
              "cpus": {
                "description": "The cpu shares used by the Cassandra service cluster tasks.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/task/cpus",
                "default": 0.5
              }
            },
            "description": "The Cassandra service cluster task configuration object.",
            "type": "object",
            "required": [
              "cpus",
              "mem"
            ]
          },
          "cassandra": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/cassandra",
            "properties": {
              "compaction_throughput_mb_per_sec": {
                "description": "Throttles compaction to the specified total throughput across the node. Compaction frequency varies with direct proportion to write throughput and is necessary to limit the SSTable size. The recommended value is 16 to 32 times the rate of write throughput (in MB/second).",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/compactionThroughputMbPerSec",
                "default": 16
              },
              "storage_port": {
                "description": "The port for inter-node communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/storagePort",
                "default": 7000
              },
              "native_transport_port": {
                "description": "The port for CQL communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/nativeTransportPort",
                "default": 9042
              },
              "tombstone_warn_threshold": {
                "description": "The maximum number of tombstones a query can scan before warning.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/tombstoneWarnThreshold",
                "default": 1000
              },
              "rpc_port": {
                "description": "The port for Thrift RPC communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rpcPort",
                "default": 9160
              },
              "commitlog_sync_period_in_ms": {
                "description": "The number of milliseconds between disk fsync calls.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/commitlogSyncPeriodInMs",
                "default": 10000
              },
              "read_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for read operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/readRequestTimeoutInMs",
                "default": 5000
              },
              "dynamic_snitch_reset_interval_in_ms": {
                "description": "The time, in ms, the snitch will wait before resetting node scores allowing bad nodes to recover.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchResetIntervalInMs",
                "default": 600000
              },
              "column_index_size_in_kb": {
                "description": "The granularity of the index of rows within a partition. For huge rows, decrease this setting to improve seek time. If you use key cache, be careful not to make this setting too large because key cache will be overwhelmed.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/columnIndexSizeInKb",
                "default": 64
              },
              "partitioner": {
                "description": "The partitioner used to distribute rows across the cluster. Murmur3Partitioner is the recommended setting. RandomPartitioner and ByteOrderedPartitioner are supported for legacy applications.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/partitioner",
                "default": "org.apache.cassandra.dht.Murmur3Partitioner"
              },
              "num_tokens": {
                "description": "The number of tokens assigned to each node.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/numTokens",
                "default": 256
              },
              "memtable_allocation_type": {
                "description": "The type of allocations for the Cassandra memtable. heap_buffers keep all data on the JVM heap. offheap_buffers may reduce heap utilization for large string or binary values. offheap_objects may improve heap size for small integers or UUIDs as well. Both off heap options will increase read latency.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/memtableAllocationType",
                "default": "heap_buffers"
              },
              "hinted_handoff_throttle_in_kb": {
                "description": "The maximum throttle per delivery thread in kilobytes per second.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/hintedHandoffThrottleInKb",
                "default": 1024
              },
              "write_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for write operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/writeRequestTimeoutInMs",
                "default": 2000
              },
              "truncate_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for truncate operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/truncateRequestTimeoutInMs",
                "default": 60000
              },
              "max_hints_delivery_threads": {
                "description": "The maximum number of delivery threads for hinted handoff.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/maxHintsDeliveryThreads",
                "default": 2
              },
              "dynamic_snitch_update_interval_in_ms": {
                "description": "The time, in ms, the snitch will wait before updating node scores.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchUpdateIntervalInMs",
                "default": 100
              },
              "batch_size_warn_threshold_in_kb": {
                "description": "Warn the operator on a batch size exceeding this value in kilobytes. Caution should be taken on increasing the size of this threshold as it can lead to node instability.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchSizeWarnThresholdInKb",
                "default": 5
              },
              "start_native_transport": {
                "description": "If true CQL is enabled.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/startNativeTransport",
                "default": true
              },
              "row_cache_size_in_mb": {
                "description": "Maximum size of the row cache in memory. Row cache can save more time than key_cache_size_in_mb, but is space-intensive because it contains the entire row. Use the row cache only for hot rows or static rows. 0 disables the row cache.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rowCacheSizeInMb",
                "default": 0
              },
              "concurrent_reads": {
                "description": "For workloads with more data than can fit in memory, the bottleneck is reads fetching data from disk. Setting to (16 times the number of drives) allows operations to queue low enough in the stack so that the OS and drives can reorder them.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentReads",
                "default": 16
              },
              "thrift_framed_transport_size_in_mb": {
                "description": "Frame size (maximum field length) for Thrift.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/thriftFramedTransportSizeInMb",
                "default": 15
              },
              "rpc_keepalive": {
                "description": "Enables or TCP keepalive for RPC connections.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rpcKeepalive",
                "default": true
              },
              "index_summary_resize_interval_in_minutes": {
                "description": "How frequently index summaries should be re-sampled in minutes. This is done periodically to redistribute memory from the fixed-size pool to SSTables proportional their recent read rates.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/indexSummaryResizeIntervalInMinutes",
                "default": 60
              },
              "internode_compression": {
                "description": "Controls whether traffic between nodes is compressed. all compresses all traffic. none compresses no traffic. dc compresses between datacenters.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/internodeCompression",
                "default": "all"
              },
              "cas_contention_timeout_in_ms": {
                "description": "The time for which the coordinator will retry CAS operations on the same row in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/casContentionTimeoutInMs",
                "default": 1000
              },
              "row_cache_save_period": {
                "description": "Duration in seconds that rows are saved in cache. 0 disables caching.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rowCacheSavePeriod",
                "default": 0
              },
              "jmx_port": {
                "description": "The JMX port that will be used to interface with the Cassandra application.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/jmxPort",
                "default": 7199
              },
              "start_rpc": {
                "description": "If true Thrift RPC is enable. This is deprecated by may be necessary for legacy applications.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/startRpc",
                "default": false
              },
              "hinted_handoff_enabled": {
                "description": "If true, hinted handoff is enabled for the cluster.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/hintedHandoffEnabled",
                "default": true
              },
              "concurrent_counter_writes": {
                "description": "Counter writes read the current values before incrementing and writing them back. The recommended value is (16 times the number of drives) .",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentCounterWrites",
                "default": 16
              },
              "concurrent_writes": {
                "description": "Writes in Cassandra are rarely I/O bound, so the ideal number of concurrent writes depends on the number of CPU cores in your system. The recommended value is 8 times the number of cpu cores.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentWrites",
                "default": 32
              },
              "request_timeout_in_ms": {
                "description": "The default timeout for all other requests in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/requestTimeoutInMs",
                "default": 10000
              },
              "key_cache_save_period": {
                "description": "The duration in seconds that keys are saved in cache. Saved caches greatly improve cold-start speeds and has relatively little effect on I/O.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/keyCacheSavePeriod",
                "default": 14400
              },
              "counter_write_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for counter write operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/counterWriteRequestTimeoutInMs",
                "default": 5000
              },
              "sstable_preemptive_open_interval_in_mb": {
                "description": "When compacting, the replacement opens SSTables before they are completely written and uses in place of the prior SSTables for any range previously written. This setting helps to smoothly transfer reads between the SSTables by reducing page cache churn and keeps hot rows hot.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/sstablePreemptiveOpenIntervalInMb",
                "default": 50
              },
              "range_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for range scans complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rangeRequestTimeoutInMs",
                "default": 10000
              },
              "dynamic_snitch_badness_threshold": {
                "description": "Sets the performance threshold for dynamically routing client requests away from a poorly performing node.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchBadnessThreshold",
                "default": 0.1
              },
              "tombstone_failure_threshold": {
                "description": "The maximum number of tombstones a query can scan before aborting.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/tombstoneFailureThreshold",
                "default": 100000
              },
              "batch_size_fail_threshold_in_kb": {
                "description": "Fail batch sizes exceeding this value in kilobytes. Caution should be taken on increasing the size of this threshold as it can lead to node instability.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchSizeFailThresholdInKb",
                "default": 50
              },
              "batchlog_replay_throttle_in_kb": {
                "description": "The total throttle for log replay in Kpbs.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchlogReplayThrottleInKb",
                "default": 1024
              },
              "max_hint_window_in_ms": {
                "description": "The maximum amount of time, in ms, that hints are generates hints for an unresponsive node.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/maxHintWindowInMs",
                "default": 10800000
              },
              "commitlog_segment_size_in_mb": {
                "description": "The size of each commit log segment in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/commitlogSegmentSizeInMb",
                "default": 32
              }
            },
            "description": "Cassandra service configuration properties",
            "type": "object",
            "required": [
              "jmx_port",
              "num_tokens",
              "max_hint_window_in_ms",
              "hinted_handoff_enabled",
              "hinted_handoff_throttle_in_kb",
              "max_hints_delivery_threads",
              "batchlog_replay_throttle_in_kb",
              "partitioner",
              "key_cache_save_period",
              "row_cache_size_in_mb",
              "row_cache_save_period",
              "commitlog_sync_period_in_ms",
              "commitlog_segment_size_in_mb",
              "concurrent_reads",
              "concurrent_writes",
              "concurrent_counter_writes",
              "memtable_allocation_type",
              "index_summary_resize_interval_in_minutes",
              "storage_port",
              "start_native_transport",
              "native_transport_port",
              "start_rpc",
              "rpc_port",
              "rpc_keepalive",
              "thrift_framed_transport_size_in_mb",
              "tombstone_warn_threshold",
              "tombstone_failure_threshold",
              "column_index_size_in_kb",
              "batch_size_warn_threshold_in_kb",
              "batch_size_fail_threshold_in_kb",
              "compaction_throughput_mb_per_sec",
              "sstable_preemptive_open_interval_in_mb",
              "read_request_timeout_in_ms",
              "range_request_timeout_in_ms",
              "write_request_timeout_in_ms",
              "counter_write_request_timeout_in_ms",
              "cas_contention_timeout_in_ms",
              "truncate_request_timeout_in_ms",
              "request_timeout_in_ms",
              "dynamic_snitch_update_interval_in_ms",
              "dynamic_snitch_reset_interval_in_ms",
              "dynamic_snitch_badness_threshold",
              "internode_compression"
            ]
          },
          "service": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/service",
            "properties": {
              "mem": {
                "description": "The memory used by the Cassandra service scheduler in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/mem",
                "default": 2048
              },
              "api_port": {
                "description": "The port that the Cassandra service API will accept on.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/api_port",
                "default": 9000
              },
              "heap": {
                "description": "The JVM heap used by the Cassandra service scheduler in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/heap",
                "default": 1024
              },
              "user": {
                "description": "The user that the service will run as.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/user",
                "default": "root"
              },
              "placement_strategy": {
                "description": "The placement strategy for Cassandra nodes. This should always be NODE.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/placement_strategy",
                "default": "NODE"
              },
              "cpus": {
                "description": "The cpu shares used by the Cassandra service scheduler.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/service/cpus",
                "default": 0.5
              },
              "name": {
                "description": "The name of the Cassandra service instance.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/name",
                "default": "cassandra"
              }
            },
            "description": "DC/OS service configuration properties",
            "type": "object",
            "required": [
              "name",
              "user",
              "cpus",
              "mem",
              "heap",
              "api_port",
              "placement_strategy"
            ]
          },
          "executor": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/executor",
            "properties": {
              "heap": {
                "description": "The JVM heap used by the Cassandra service executor in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/heap",
                "default": 768
              },
              "disk": {
                "description": "The amount of disk used by the Cassandra service executor in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/heap",
                "default": 1024
              },
              "mem": {
                "description": "The memory used by the Cassandra service executor in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/mem",
                "default": 1024
              },
              "api_port": {
                "description": "The port that the Cassandra executor API will accept on.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/api_port",
                "default": 9001
              },
              "cpus": {
                "description": "The cpu shares used by the Cassandra service executor.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/executor/cpus",
                "default": 0.5
              }
            },
            "description": "The Cassandra service executor configuration object.",
            "type": "object",
            "required": [
              "cpus",
              "mem",
              "heap",
              "disk",
              "api_port"
            ]
          },
          "nodes": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/node",
            "properties": {
              "disk": {
                "description": "The amount of disk, in MB, allocated to the Cassandra process.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/disk",
                "default": 10240
              },
              "mem": {
                "description": "The amount of memory, in MB, allocated to the Cassandra process.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/mem",
                "default": 4096
              },
              "disk_type": {
                "description": "Disk type to be used for storing Cassandra data. See documentation. [ROOT, MOUNT]",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/node/diskType",
                "default": "ROOT"
              },
              "count": {
                "description": "The number of Cassandra nodes in the cluster.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/count",
                "default": 3
              },
              "heap": {
                "additionalProperties": false,
                "id": "http://cassandra/docs/mesosphere.com/node/heap",
                "properties": {
                  "new": {
                    "description": "The amount of JVM new generation heap, in MB, allocated to the Cassandra process.",
                    "type": "integer",
                    "id": "http://cassandra/docs/mesosphere.com/node/heap/new",
                    "default": 100
                  },
                  "size": {
                    "description": "The amount of JVM heap, in MB, allocated to the Cassandra process.",
                    "type": "integer",
                    "id": "http://cassandra/docs/mesosphere.com/node/heap/size",
                    "default": 2048
                  }
                },
                "description": "The Cassandra process JVM heap configuration object.",
                "type": "object",
                "required": [
                  "size",
                  "new"
                ]
              },
              "cpus": {
                "description": "The number of cpu shares allocated to the Cassandra process.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/node/cpus",
                "default": 0.5
              },
              "seeds": {
                "description": "The number of Cassandra seed nodes in the cluster",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/seeds",
                "default": 2
              }
            },
            "description": "Cassandra node configuration properties",
            "type": "object",
            "required": [
              "cpus",
              "mem",
              "disk",
              "heap",
              "count",
              "seeds"
            ]
          }
        },
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "required": [
          "service",
          "nodes",
          "cassandra",
          "executor",
          "task"
        ]
      },
      "postInstallNotes": "DC/OS Cassandra Service is being installed.\n\n\tDocumentation: https://docs.mesosphere.com/usage/services/cassandra/\n\tIssues: https://docs.mesosphere.com/support/",
      "name": "cassandra",
      "marathon": {
        "v2AppMustacheTemplate": ""
      },
      "tags": [
        "data",
        "database",
        "nosql"
      ],
      "packagingVersion": "3.0",
      "releaseVersion": 6,
      "description": "Apache Cassandra running on DC/OS",
      "resource": {
        "assets": {
          "uris": {
            "scheduler-zip": "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.4-2.2.5/scheduler.zip",
            "jre-tar-gz": "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.4-2.2.5/server-jre-8u74-linux-x64.tar.gz",
            "apache-cassandra-bin-tar-gz": "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.4-2.2.5/apache-cassandra-2.2.5-bin.tar.gz",
            "executor-zip": "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.4-2.2.5/executor.zip"
          }
        },
        "images": {
          "icon-large": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-large.png",
          "icon-small": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-small.png",
          "icon-medium": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-medium.png"
        }
      },
      "framework": true,
      "pip": [
        "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.4-2.2.5/dcos-cassandra-0.1.0.tar.gz"
      ],
      "postUninstallNotes": "DC/OS Cassandra Service has been uninstalled.\nPlease follow the instructions at https://docs.mesosphere.com/usage/services/cassandra/#uninstall to remove any persistent state if required."
    },
    {
      "version": "1.0.2-2.2.5",
      "selected": true,
      "maintainer": "support@mesosphere.io",
      "minDcosReleaseVersion": "1.7",
      "config": {
        "additionalProperties": false,
        "id": "http://cassandra/docs/mesosphere.com",
        "properties": {
          "task": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/task",
            "properties": {
              "mem": {
                "description": "The memory used by the Cassandra cluster tasks in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/mem",
                "default": 256
              },
              "cpus": {
                "description": "The cpu shares used by the Cassandra service cluster tasks.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/task/cpus",
                "default": 0.5
              }
            },
            "description": "The Cassandra service cluster task configuration object.",
            "type": "object",
            "required": [
              "cpus",
              "mem"
            ]
          },
          "cassandra": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/cassandra",
            "properties": {
              "compaction_throughput_mb_per_sec": {
                "description": "Throttles compaction to the specified total throughput across the node. Compaction frequency varies with direct proportion to write throughput and is necessary to limit the SSTable size. The recommended value is 16 to 32 times the rate of write throughput (in MB/second).",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/compactionThroughputMbPerSec",
                "default": 16
              },
              "storage_port": {
                "description": "The port for inter-node communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/storagePort",
                "default": 7000
              },
              "native_transport_port": {
                "description": "The port for CQL communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/nativeTransportPort",
                "default": 9042
              },
              "tombstone_warn_threshold": {
                "description": "The maximum number of tombstones a query can scan before warning.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/tombstoneWarnThreshold",
                "default": 1000
              },
              "rpc_port": {
                "description": "The port for Thrift RPC communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rpcPort",
                "default": 9160
              },
              "commitlog_sync_period_in_ms": {
                "description": "The number of milliseconds between disk fsync calls.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/commitlogSyncPeriodInMs",
                "default": 10000
              },
              "read_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for read operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/readRequestTimeoutInMs",
                "default": 5000
              },
              "dynamic_snitch_reset_interval_in_ms": {
                "description": "The time, in ms, the snitch will wait before resetting node scores allowing bad nodes to recover.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchResetIntervalInMs",
                "default": 600000
              },
              "column_index_size_in_kb": {
                "description": "The granularity of the index of rows within a partition. For huge rows, decrease this setting to improve seek time. If you use key cache, be careful not to make this setting too large because key cache will be overwhelmed.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/columnIndexSizeInKb",
                "default": 64
              },
              "partitioner": {
                "description": "The partitioner used to distribute rows across the cluster. Murmur3Partitioner is the recommended setting. RandomPartitioner and ByteOrderedPartitioner are supported for legacy applications.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/partitioner",
                "default": "org.apache.cassandra.dht.Murmur3Partitioner"
              },
              "num_tokens": {
                "description": "The number of tokens assigned to each node.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/numTokens",
                "default": 256
              },
              "memtable_allocation_type": {
                "description": "The type of allocations for the Cassandra memtable. heap_buffers keep all data on the JVM heap. offheap_buffers may reduce heap utilization for large string or binary values. offheap_objects may improve heap size for small integers or UUIDs as well. Both off heap options will increase read latency.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/memtableAllocationType",
                "default": "heap_buffers"
              },
              "hinted_handoff_throttle_in_kb": {
                "description": "The maximum throttle per delivery thread in kilobytes per second.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/hintedHandoffThrottleInKb",
                "default": 1024
              },
              "write_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for write operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/writeRequestTimeoutInMs",
                "default": 2000
              },
              "truncate_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for truncate operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/truncateRequestTimeoutInMs",
                "default": 60000
              },
              "max_hints_delivery_threads": {
                "description": "The maximum number of delivery threads for hinted handoff.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/maxHintsDeliveryThreads",
                "default": 2
              },
              "dynamic_snitch_update_interval_in_ms": {
                "description": "The time, in ms, the snitch will wait before updating node scores.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchUpdateIntervalInMs",
                "default": 100
              },
              "batch_size_warn_threshold_in_kb": {
                "description": "Warn the operator on a batch size exceeding this value in kilobytes. Caution should be taken on increasing the size of this threshold as it can lead to node instability.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchSizeWarnThresholdInKb",
                "default": 5
              },
              "start_native_transport": {
                "description": "If true CQL is enabled.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/startNativeTransport",
                "default": true
              },
              "row_cache_size_in_mb": {
                "description": "Maximum size of the row cache in memory. Row cache can save more time than key_cache_size_in_mb, but is space-intensive because it contains the entire row. Use the row cache only for hot rows or static rows. 0 disables the row cache.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rowCacheSizeInMb",
                "default": 0
              },
              "concurrent_reads": {
                "description": "For workloads with more data than can fit in memory, the bottleneck is reads fetching data from disk. Setting to (16 times the number of drives) allows operations to queue low enough in the stack so that the OS and drives can reorder them.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentReads",
                "default": 16
              },
              "thrift_framed_transport_size_in_mb": {
                "description": "Frame size (maximum field length) for Thrift.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/thriftFramedTransportSizeInMb",
                "default": 15
              },
              "rpc_keepalive": {
                "description": "Enables or TCP keepalive for RPC connections.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rpcKeepalive",
                "default": true
              },
              "index_summary_resize_interval_in_minutes": {
                "description": "How frequently index summaries should be re-sampled in minutes. This is done periodically to redistribute memory from the fixed-size pool to SSTables proportional their recent read rates.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/indexSummaryResizeIntervalInMinutes",
                "default": 60
              },
              "internode_compression": {
                "description": "Controls whether traffic between nodes is compressed. all compresses all traffic. none compresses no traffic. dc compresses between datacenters.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/internodeCompression",
                "default": "all"
              },
              "cas_contention_timeout_in_ms": {
                "description": "The time for which the coordinator will retry CAS operations on the same row in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/casContentionTimeoutInMs",
                "default": 1000
              },
              "row_cache_save_period": {
                "description": "Duration in seconds that rows are saved in cache. 0 disables caching.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rowCacheSavePeriod",
                "default": 0
              },
              "jmx_port": {
                "description": "The JMX port that will be used to interface with the Cassandra application.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/jmxPort",
                "default": 7199
              },
              "start_rpc": {
                "description": "If true Thrift RPC is enable. This is deprecated by may be necessary for legacy applications.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/startRpc",
                "default": false
              },
              "hinted_handoff_enabled": {
                "description": "If true, hinted handoff is enabled for the cluster.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/hintedHandoffEnabled",
                "default": true
              },
              "concurrent_counter_writes": {
                "description": "Counter writes read the current values before incrementing and writing them back. The recommended value is (16 times the number of drives) .",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentCounterWrites",
                "default": 16
              },
              "concurrent_writes": {
                "description": "Writes in Cassandra are rarely I/O bound, so the ideal number of concurrent writes depends on the number of CPU cores in your system. The recommended value is 8 times the number of cpu cores.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentWrites",
                "default": 32
              },
              "request_timeout_in_ms": {
                "description": "The default timeout for all other requests in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/requestTimeoutInMs",
                "default": 10000
              },
              "key_cache_save_period": {
                "description": "The duration in seconds that keys are saved in cache. Saved caches greatly improve cold-start speeds and has relatively little effect on I/O.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/keyCacheSavePeriod",
                "default": 14400
              },
              "counter_write_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for counter write operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/counterWriteRequestTimeoutInMs",
                "default": 5000
              },
              "sstable_preemptive_open_interval_in_mb": {
                "description": "When compacting, the replacement opens SSTables before they are completely written and uses in place of the prior SSTables for any range previously written. This setting helps to smoothly transfer reads between the SSTables by reducing page cache churn and keeps hot rows hot.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/sstablePreemptiveOpenIntervalInMb",
                "default": 50
              },
              "range_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for range scans complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rangeRequestTimeoutInMs",
                "default": 10000
              },
              "dynamic_snitch_badness_threshold": {
                "description": "Sets the performance threshold for dynamically routing client requests away from a poorly performing node.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchBadnessThreshold",
                "default": 0.1
              },
              "tombstone_failure_threshold": {
                "description": "The maximum number of tombstones a query can scan before aborting.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/tombstoneFailureThreshold",
                "default": 100000
              },
              "batch_size_fail_threshold_in_kb": {
                "description": "Fail batch sizes exceeding this value in kilobytes. Caution should be taken on increasing the size of this threshold as it can lead to node instability.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchSizeFailThresholdInKb",
                "default": 50
              },
              "batchlog_replay_throttle_in_kb": {
                "description": "The total throttle for log replay in Kpbs.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchlogReplayThrottleInKb",
                "default": 1024
              },
              "max_hint_window_in_ms": {
                "description": "The maximum amount of time, in ms, that hints are generates hints for an unresponsive node.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/maxHintWindowInMs",
                "default": 10800000
              },
              "commitlog_segment_size_in_mb": {
                "description": "The size of each commit log segment in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/commitlogSegmentSizeInMb",
                "default": 32
              }
            },
            "description": "Cassandra service configuration properties",
            "type": "object",
            "required": [
              "jmx_port",
              "num_tokens",
              "max_hint_window_in_ms",
              "hinted_handoff_enabled",
              "hinted_handoff_throttle_in_kb",
              "max_hints_delivery_threads",
              "batchlog_replay_throttle_in_kb",
              "partitioner",
              "key_cache_save_period",
              "row_cache_size_in_mb",
              "row_cache_save_period",
              "commitlog_sync_period_in_ms",
              "commitlog_segment_size_in_mb",
              "concurrent_reads",
              "concurrent_writes",
              "concurrent_counter_writes",
              "memtable_allocation_type",
              "index_summary_resize_interval_in_minutes",
              "storage_port",
              "start_native_transport",
              "native_transport_port",
              "start_rpc",
              "rpc_port",
              "rpc_keepalive",
              "thrift_framed_transport_size_in_mb",
              "tombstone_warn_threshold",
              "tombstone_failure_threshold",
              "column_index_size_in_kb",
              "batch_size_warn_threshold_in_kb",
              "batch_size_fail_threshold_in_kb",
              "compaction_throughput_mb_per_sec",
              "sstable_preemptive_open_interval_in_mb",
              "read_request_timeout_in_ms",
              "range_request_timeout_in_ms",
              "write_request_timeout_in_ms",
              "counter_write_request_timeout_in_ms",
              "cas_contention_timeout_in_ms",
              "truncate_request_timeout_in_ms",
              "request_timeout_in_ms",
              "dynamic_snitch_update_interval_in_ms",
              "dynamic_snitch_reset_interval_in_ms",
              "dynamic_snitch_badness_threshold",
              "internode_compression"
            ]
          },
          "service": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/service",
            "properties": {
              "mem": {
                "description": "The memory used by the Cassandra service scheduler in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/mem",
                "default": 2048
              },
              "api_port": {
                "description": "The port that the Cassandra service API will accept on.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/api_port",
                "default": 9000
              },
              "heap": {
                "description": "The JVM heap used by the Cassandra service scheduler in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/heap",
                "default": 1024
              },
              "user": {
                "description": "The user that the service will run as.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/user",
                "default": "root"
              },
              "placement_strategy": {
                "description": "The placement strategy for Cassandra nodes. This should always be NODE.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/placement_strategy",
                "default": "NODE"
              },
              "cpus": {
                "description": "The cpu shares used by the Cassandra service scheduler.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/service/cpus",
                "default": 0.5
              },
              "name": {
                "description": "The name of the Cassandra service instance.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/name",
                "default": "cassandra"
              }
            },
            "description": "DC/OS service configuration properties",
            "type": "object",
            "required": [
              "name",
              "user",
              "cpus",
              "mem",
              "heap",
              "api_port",
              "placement_strategy"
            ]
          },
          "executor": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/executor",
            "properties": {
              "heap": {
                "description": "The JVM heap used by the Cassandra service executor in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/heap",
                "default": 768
              },
              "disk": {
                "description": "The amount of disk used by the Cassandra service executor in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/heap",
                "default": 1024
              },
              "mem": {
                "description": "The memory used by the Cassandra service executor in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/mem",
                "default": 1024
              },
              "api_port": {
                "description": "The port that the Cassandra executor API will accept on.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/api_port",
                "default": 9001
              },
              "cpus": {
                "description": "The cpu shares used by the Cassandra service executor.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/executor/cpus",
                "default": 0.5
              }
            },
            "description": "The Cassandra service executor configuration object.",
            "type": "object",
            "required": [
              "cpus",
              "mem",
              "heap",
              "disk",
              "api_port"
            ]
          },
          "nodes": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/node",
            "properties": {
              "disk": {
                "description": "The amount of disk, in MB, allocated to the Cassandra process.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/disk",
                "default": 10240
              },
              "mem": {
                "description": "The amount of memory, in MB, allocated to the Cassandra process.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/mem",
                "default": 4096
              },
              "seeds": {
                "description": "The number of Cassandra seed nodes in the cluster",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/seeds",
                "default": 2
              },
              "count": {
                "description": "The number of Cassandra nodes in the cluster.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/count",
                "default": 3
              },
              "heap": {
                "additionalProperties": false,
                "id": "http://cassandra/docs/mesosphere.com/node/heap",
                "properties": {
                  "new": {
                    "description": "The amount of JVM new generation heap, in MB, allocated to the Cassandra process.",
                    "type": "integer",
                    "id": "http://cassandra/docs/mesosphere.com/node/heap/new",
                    "default": 100
                  },
                  "size": {
                    "description": "The amount of JVM heap, in MB, allocated to the Cassandra process.",
                    "type": "integer",
                    "id": "http://cassandra/docs/mesosphere.com/node/heap/size",
                    "default": 2048
                  }
                },
                "description": "The Cassandra process JVM heap configuration object.",
                "type": "object",
                "required": [
                  "size",
                  "new"
                ]
              },
              "cpus": {
                "description": "The number of cpu shares allocated to the Cassandra process.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/node/cpus",
                "default": 0.5
              }
            },
            "description": "Cassandra node configuration properties",
            "type": "object",
            "required": [
              "cpus",
              "mem",
              "disk",
              "heap",
              "count",
              "seeds"
            ]
          }
        },
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "required": [
          "service",
          "nodes",
          "cassandra",
          "executor",
          "task"
        ]
      },
      "postInstallNotes": "DC/OS Cassandra Service is being installed.\n\n\tDocumentation: https://docs.mesosphere.com/usage/services/cassandra/\n\tIssues: https://docs.mesosphere.com/support/",
      "name": "cassandra",
      "marathon": {
        "v2AppMustacheTemplate": ""
      },
      "tags": [
        "data",
        "database",
        "nosql"
      ],
      "packagingVersion": "3.0",
      "releaseVersion": 4,
      "description": "Apache Cassandra running on DC/OS",
      "resource": {
        "assets": {
          "uris": {
            "scheduler-zip": "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.2-2.2.5/scheduler.zip",
            "jre-tar-gz": "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.2-2.2.5/server-jre-8u74-linux-x64.tar.gz",
            "apache-cassandra-bin-tar-gz": "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.2-2.2.5/apache-cassandra-2.2.5-bin.tar.gz",
            "executor-zip": "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.2-2.2.5/executor.zip"
          }
        },
        "images": {
          "icon-large": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-large.png",
          "icon-small": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-small.png",
          "icon-medium": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-medium.png"
        }
      },
      "framework": true,
      "pip": [
        "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.2-2.2.5/dcos-cassandra-0.1.0.tar.gz"
      ],
      "postUninstallNotes": "DC/OS Cassandra Service has been uninstalled.\nPlease follow the instructions at https://docs.mesosphere.com/usage/services/cassandra/#uninstall to remove any persistent state if required."
    },
    {
      "version": "1.0.4-2.2.5",
      "selected": true,
      "maintainer": "support@mesosphere.io",
      "minDcosReleaseVersion": "1.7",
      "config": {
        "additionalProperties": false,
        "id": "http://cassandra/docs/mesosphere.com",
        "properties": {
          "task": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/task",
            "properties": {
              "mem": {
                "description": "The memory used by the Cassandra cluster tasks in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/mem",
                "default": 256
              },
              "cpus": {
                "description": "The cpu shares used by the Cassandra service cluster tasks.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/task/cpus",
                "default": 0.5
              }
            },
            "description": "The Cassandra service cluster task configuration object.",
            "type": "object",
            "required": [
              "cpus",
              "mem"
            ]
          },
          "cassandra": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/cassandra",
            "properties": {
              "compaction_throughput_mb_per_sec": {
                "description": "Throttles compaction to the specified total throughput across the node. Compaction frequency varies with direct proportion to write throughput and is necessary to limit the SSTable size. The recommended value is 16 to 32 times the rate of write throughput (in MB/second).",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/compactionThroughputMbPerSec",
                "default": 16
              },
              "storage_port": {
                "description": "The port for inter-node communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/storagePort",
                "default": 7000
              },
              "native_transport_port": {
                "description": "The port for CQL communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/nativeTransportPort",
                "default": 9042
              },
              "tombstone_warn_threshold": {
                "description": "The maximum number of tombstones a query can scan before warning.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/tombstoneWarnThreshold",
                "default": 1000
              },
              "rpc_port": {
                "description": "The port for Thrift RPC communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rpcPort",
                "default": 9160
              },
              "commitlog_sync_period_in_ms": {
                "description": "The number of milliseconds between disk fsync calls.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/commitlogSyncPeriodInMs",
                "default": 10000
              },
              "read_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for read operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/readRequestTimeoutInMs",
                "default": 5000
              },
              "dynamic_snitch_reset_interval_in_ms": {
                "description": "The time, in ms, the snitch will wait before resetting node scores allowing bad nodes to recover.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchResetIntervalInMs",
                "default": 600000
              },
              "column_index_size_in_kb": {
                "description": "The granularity of the index of rows within a partition. For huge rows, decrease this setting to improve seek time. If you use key cache, be careful not to make this setting too large because key cache will be overwhelmed.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/columnIndexSizeInKb",
                "default": 64
              },
              "partitioner": {
                "description": "The partitioner used to distribute rows across the cluster. Murmur3Partitioner is the recommended setting. RandomPartitioner and ByteOrderedPartitioner are supported for legacy applications.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/partitioner",
                "default": "org.apache.cassandra.dht.Murmur3Partitioner"
              },
              "num_tokens": {
                "description": "The number of tokens assigned to each node.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/numTokens",
                "default": 256
              },
              "memtable_allocation_type": {
                "description": "The type of allocations for the Cassandra memtable. heap_buffers keep all data on the JVM heap. offheap_buffers may reduce heap utilization for large string or binary values. offheap_objects may improve heap size for small integers or UUIDs as well. Both off heap options will increase read latency.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/memtableAllocationType",
                "default": "heap_buffers"
              },
              "hinted_handoff_throttle_in_kb": {
                "description": "The maximum throttle per delivery thread in kilobytes per second.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/hintedHandoffThrottleInKb",
                "default": 1024
              },
              "write_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for write operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/writeRequestTimeoutInMs",
                "default": 2000
              },
              "truncate_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for truncate operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/truncateRequestTimeoutInMs",
                "default": 60000
              },
              "max_hints_delivery_threads": {
                "description": "The maximum number of delivery threads for hinted handoff.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/maxHintsDeliveryThreads",
                "default": 2
              },
              "dynamic_snitch_update_interval_in_ms": {
                "description": "The time, in ms, the snitch will wait before updating node scores.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchUpdateIntervalInMs",
                "default": 100
              },
              "batch_size_warn_threshold_in_kb": {
                "description": "Warn the operator on a batch size exceeding this value in kilobytes. Caution should be taken on increasing the size of this threshold as it can lead to node instability.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchSizeWarnThresholdInKb",
                "default": 5
              },
              "start_native_transport": {
                "description": "If true CQL is enabled.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/startNativeTransport",
                "default": true
              },
              "row_cache_size_in_mb": {
                "description": "Maximum size of the row cache in memory. Row cache can save more time than key_cache_size_in_mb, but is space-intensive because it contains the entire row. Use the row cache only for hot rows or static rows. 0 disables the row cache.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rowCacheSizeInMb",
                "default": 0
              },
              "concurrent_reads": {
                "description": "For workloads with more data than can fit in memory, the bottleneck is reads fetching data from disk. Setting to (16 times the number of drives) allows operations to queue low enough in the stack so that the OS and drives can reorder them.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentReads",
                "default": 16
              },
              "thrift_framed_transport_size_in_mb": {
                "description": "Frame size (maximum field length) for Thrift.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/thriftFramedTransportSizeInMb",
                "default": 15
              },
              "rpc_keepalive": {
                "description": "Enables or TCP keepalive for RPC connections.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rpcKeepalive",
                "default": true
              },
              "index_summary_resize_interval_in_minutes": {
                "description": "How frequently index summaries should be re-sampled in minutes. This is done periodically to redistribute memory from the fixed-size pool to SSTables proportional their recent read rates.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/indexSummaryResizeIntervalInMinutes",
                "default": 60
              },
              "internode_compression": {
                "description": "Controls whether traffic between nodes is compressed. all compresses all traffic. none compresses no traffic. dc compresses between datacenters.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/internodeCompression",
                "default": "all"
              },
              "cas_contention_timeout_in_ms": {
                "description": "The time for which the coordinator will retry CAS operations on the same row in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/casContentionTimeoutInMs",
                "default": 1000
              },
              "row_cache_save_period": {
                "description": "Duration in seconds that rows are saved in cache. 0 disables caching.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rowCacheSavePeriod",
                "default": 0
              },
              "jmx_port": {
                "description": "The JMX port that will be used to interface with the Cassandra application.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/jmxPort",
                "default": 7199
              },
              "start_rpc": {
                "description": "If true Thrift RPC is enable. This is deprecated by may be necessary for legacy applications.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/startRpc",
                "default": false
              },
              "hinted_handoff_enabled": {
                "description": "If true, hinted handoff is enabled for the cluster.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/hintedHandoffEnabled",
                "default": true
              },
              "concurrent_counter_writes": {
                "description": "Counter writes read the current values before incrementing and writing them back. The recommended value is (16 times the number of drives) .",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentCounterWrites",
                "default": 16
              },
              "concurrent_writes": {
                "description": "Writes in Cassandra are rarely I/O bound, so the ideal number of concurrent writes depends on the number of CPU cores in your system. The recommended value is 8 times the number of cpu cores.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentWrites",
                "default": 32
              },
              "request_timeout_in_ms": {
                "description": "The default timeout for all other requests in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/requestTimeoutInMs",
                "default": 10000
              },
              "key_cache_save_period": {
                "description": "The duration in seconds that keys are saved in cache. Saved caches greatly improve cold-start speeds and has relatively little effect on I/O.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/keyCacheSavePeriod",
                "default": 14400
              },
              "counter_write_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for counter write operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/counterWriteRequestTimeoutInMs",
                "default": 5000
              },
              "sstable_preemptive_open_interval_in_mb": {
                "description": "When compacting, the replacement opens SSTables before they are completely written and uses in place of the prior SSTables for any range previously written. This setting helps to smoothly transfer reads between the SSTables by reducing page cache churn and keeps hot rows hot.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/sstablePreemptiveOpenIntervalInMb",
                "default": 50
              },
              "range_request_timeout_in_ms": {
                "description": "The time that the coordinator waits for range scans complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rangeRequestTimeoutInMs",
                "default": 10000
              },
              "dynamic_snitch_badness_threshold": {
                "description": "Sets the performance threshold for dynamically routing client requests away from a poorly performing node.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchBadnessThreshold",
                "default": 0.1
              },
              "tombstone_failure_threshold": {
                "description": "The maximum number of tombstones a query can scan before aborting.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/tombstoneFailureThreshold",
                "default": 100000
              },
              "batch_size_fail_threshold_in_kb": {
                "description": "Fail batch sizes exceeding this value in kilobytes. Caution should be taken on increasing the size of this threshold as it can lead to node instability.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchSizeFailThresholdInKb",
                "default": 50
              },
              "batchlog_replay_throttle_in_kb": {
                "description": "The total throttle for log replay in Kpbs.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchlogReplayThrottleInKb",
                "default": 1024
              },
              "max_hint_window_in_ms": {
                "description": "The maximum amount of time, in ms, that hints are generates hints for an unresponsive node.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/maxHintWindowInMs",
                "default": 10800000
              },
              "commitlog_segment_size_in_mb": {
                "description": "The size of each commit log segment in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/commitlogSegmentSizeInMb",
                "default": 32
              }
            },
            "description": "Cassandra service configuration properties",
            "type": "object",
            "required": [
              "jmx_port",
              "num_tokens",
              "max_hint_window_in_ms",
              "hinted_handoff_enabled",
              "hinted_handoff_throttle_in_kb",
              "max_hints_delivery_threads",
              "batchlog_replay_throttle_in_kb",
              "partitioner",
              "key_cache_save_period",
              "row_cache_size_in_mb",
              "row_cache_save_period",
              "commitlog_sync_period_in_ms",
              "commitlog_segment_size_in_mb",
              "concurrent_reads",
              "concurrent_writes",
              "concurrent_counter_writes",
              "memtable_allocation_type",
              "index_summary_resize_interval_in_minutes",
              "storage_port",
              "start_native_transport",
              "native_transport_port",
              "start_rpc",
              "rpc_port",
              "rpc_keepalive",
              "thrift_framed_transport_size_in_mb",
              "tombstone_warn_threshold",
              "tombstone_failure_threshold",
              "column_index_size_in_kb",
              "batch_size_warn_threshold_in_kb",
              "batch_size_fail_threshold_in_kb",
              "compaction_throughput_mb_per_sec",
              "sstable_preemptive_open_interval_in_mb",
              "read_request_timeout_in_ms",
              "range_request_timeout_in_ms",
              "write_request_timeout_in_ms",
              "counter_write_request_timeout_in_ms",
              "cas_contention_timeout_in_ms",
              "truncate_request_timeout_in_ms",
              "request_timeout_in_ms",
              "dynamic_snitch_update_interval_in_ms",
              "dynamic_snitch_reset_interval_in_ms",
              "dynamic_snitch_badness_threshold",
              "internode_compression"
            ]
          },
          "service": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/service",
            "properties": {
              "mem": {
                "description": "The memory used by the Cassandra service scheduler in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/mem",
                "default": 2048
              },
              "api_port": {
                "description": "The port that the Cassandra service API will accept on.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/api_port",
                "default": 9000
              },
              "heap": {
                "description": "The JVM heap used by the Cassandra service scheduler in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/heap",
                "default": 1024
              },
              "user": {
                "description": "The user that the service will run as.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/user",
                "default": "root"
              },
              "placement_strategy": {
                "description": "The placement strategy for Cassandra nodes. This should always be NODE.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/placement_strategy",
                "default": "NODE"
              },
              "cpus": {
                "description": "The cpu shares used by the Cassandra service scheduler.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/service/cpus",
                "default": 0.5
              },
              "name": {
                "description": "The name of the Cassandra service instance.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/name",
                "default": "cassandra"
              }
            },
            "description": "DC/OS service configuration properties",
            "type": "object",
            "required": [
              "name",
              "user",
              "cpus",
              "mem",
              "heap",
              "api_port",
              "placement_strategy"
            ]
          },
          "executor": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/executor",
            "properties": {
              "heap": {
                "description": "The JVM heap used by the Cassandra service executor in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/heap",
                "default": 768
              },
              "disk": {
                "description": "The amount of disk used by the Cassandra service executor in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/heap",
                "default": 1024
              },
              "mem": {
                "description": "The memory used by the Cassandra service executor in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/mem",
                "default": 1024
              },
              "api_port": {
                "description": "The port that the Cassandra executor API will accept on.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/executor/api_port",
                "default": 9001
              },
              "cpus": {
                "description": "The cpu shares used by the Cassandra service executor.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/executor/cpus",
                "default": 0.5
              }
            },
            "description": "The Cassandra service executor configuration object.",
            "type": "object",
            "required": [
              "cpus",
              "mem",
              "heap",
              "disk",
              "api_port"
            ]
          },
          "nodes": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/node",
            "properties": {
              "disk": {
                "description": "The amount of disk, in MB, allocated to the Cassandra process.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/disk",
                "default": 10240
              },
              "mem": {
                "description": "The amount of memory, in MB, allocated to the Cassandra process.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/mem",
                "default": 4096
              },
              "disk_type": {
                "description": "Disk type to be used for storing Cassandra data. See documentation. [ROOT, MOUNT]",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/node/diskType",
                "default": "ROOT"
              },
              "count": {
                "description": "The number of Cassandra nodes in the cluster.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/count",
                "default": 3
              },
              "heap": {
                "additionalProperties": false,
                "id": "http://cassandra/docs/mesosphere.com/node/heap",
                "properties": {
                  "new": {
                    "description": "The amount of JVM new generation heap, in MB, allocated to the Cassandra process.",
                    "type": "integer",
                    "id": "http://cassandra/docs/mesosphere.com/node/heap/new",
                    "default": 100
                  },
                  "size": {
                    "description": "The amount of JVM heap, in MB, allocated to the Cassandra process.",
                    "type": "integer",
                    "id": "http://cassandra/docs/mesosphere.com/node/heap/size",
                    "default": 2048
                  }
                },
                "description": "The Cassandra process JVM heap configuration object.",
                "type": "object",
                "required": [
                  "size",
                  "new"
                ]
              },
              "cpus": {
                "description": "The number of cpu shares allocated to the Cassandra process.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/node/cpus",
                "default": 0.5
              },
              "seeds": {
                "description": "The number of Cassandra seed nodes in the cluster",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/seeds",
                "default": 2
              }
            },
            "description": "Cassandra node configuration properties",
            "type": "object",
            "required": [
              "cpus",
              "mem",
              "disk",
              "heap",
              "count",
              "seeds"
            ]
          }
        },
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "required": [
          "service",
          "nodes",
          "cassandra",
          "executor",
          "task"
        ]
      },
      "postInstallNotes": "DC/OS Cassandra Service is being installed.\n\n\tDocumentation: https://docs.mesosphere.com/usage/services/cassandra/\n\tIssues: https://docs.mesosphere.com/support/",
      "name": "cassandra",
      "marathon": {
        "v2AppMustacheTemplate": ""
      },
      "tags": [
        "data",
        "database",
        "nosql"
      ],
      "packagingVersion": "3.0",
      "releaseVersion": 5,
      "description": "Apache Cassandra running on DC/OS",
      "resource": {
        "assets": {
          "uris": {
            "scheduler-zip": "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.4-2.2.5/scheduler.zip",
            "jre-tar-gz": "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.4-2.2.5/server-jre-8u74-linux-x64.tar.gz",
            "apache-cassandra-bin-tar-gz": "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.4-2.2.5/apache-cassandra-2.2.5-bin.tar.gz",
            "executor-zip": "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.4-2.2.5/executor.zip"
          }
        },
        "images": {
          "icon-large": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-large.png",
          "icon-small": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-small.png",
          "icon-medium": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-medium.png"
        }
      },
      "framework": true,
      "pip": [
        "https://s3.amazonaws.com/downloads.mesosphere.io/cassandra/assets/1.0.4-2.2.5/dcos-cassandra-0.1.0.tar.gz"
      ],
      "postUninstallNotes": "DC/OS Cassandra Service has been uninstalled.\nPlease follow the instructions at https://docs.mesosphere.com/usage/services/cassandra/#uninstall to remove any persistent state if required."
    },
    {
      "version": "2.2.5-0.2.0",
      "config": {
        "additionalProperties": false,
        "id": "http://cassandra/docs/mesosphere.com",
        "properties": {
          "cassandra": {
            "additionalProperties": false,
            "type": "object",
            "id": "http://cassandra/docs/mesosphere.com/cassandra",
            "properties": {
              "storagePort": {
                "description": "The port for inter-node communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/storagePort",
                "default": 7000
              },
              "concurrentReads": {
                "description": "For workloads with more data than can fit in memory, the bottleneck is reads fetching data from disk. Setting to (16 times the number of drives) allows operations to queue low enough in the stack so that the OS and drives can reorder them.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentReads",
                "default": 16
              },
              "counterWriteRequestTimeoutInMs": {
                "description": "The time that the coordinator waits for counter write operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/counterWriteRequestTimeoutInMs",
                "default": 5000
              },
              "tombstoneWarnThreshold": {
                "description": "The maximum number of tombstones a query can scan before warning.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/tombstoneWarnThreshold",
                "default": 1000
              },
              "maxHintsDeliveryThreads": {
                "description": "The maximum number of delivery threads for hinted handoff.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/maxHintsDeliveryThreads",
                "default": 2
              },
              "batchlogReplayThrottleInKb": {
                "description": "The total throttle for log replay in Kpbs.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchlogReplayThrottleInKb",
                "default": 1024
              },
              "sstablePreemptiveOpenIntervalInMb": {
                "description": "When compacting, the replacement opens SSTables before they are completely written and uses in place of the prior SSTables for any range previously written. This setting helps to smoothly transfer reads between the SSTables by reducing page cache churn and keeps hot rows hot.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/sstablePreemptiveOpenIntervalInMb",
                "default": 50
              },
              "columnIndexSizeInKb": {
                "description": "The granularity of the index of rows within a partition. For huge rows, decrease this setting to improve seek time. If you use key cache, be careful not to make this setting too large because key cache will be overwhelmed.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/columnIndexSizeInKb",
                "default": 64
              },
              "dynamicSnitchResetIntervalInMs": {
                "description": "The time, in ms, the snitch will wait before resetting node scores allowing bad nodes to recover.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchResetIntervalInMs",
                "default": 600000
              },
              "numTokens": {
                "description": "The number of tokens assigned to each node.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/numTokens",
                "default": 256
              },
              "indexSummaryResizeIntervalInMinutes": {
                "description": "How frequently index summaries should be re-sampled in minutes. This is done periodically to redistribute memory from the fixed-size pool to SSTables proportional their recent read rates.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/indexSummaryResizeIntervalInMinutes",
                "default": 60
              },
              "version": {
                "description": "The version of the Cassandra application.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/version",
                "default": "2.2.5"
              },
              "batchSizeWarnThresholdInKb": {
                "description": "Warn the operator on a batch size exceeding this value in kilobytes. Caution should be taken on increasing the size of this threshold as it can lead to node instability.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchSizeWarnThresholdInKb",
                "default": 5
              },
              "keyCacheSavePeriod": {
                "description": "The duration in seconds that keys are saved in cache. Saved caches greatly improve cold-start speeds and has relatively little effect on I/O.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/keyCacheSavePeriod",
                "default": 14400
              },
              "hintedHandoffEnabled": {
                "description": "If true, hinted handoff is enabled for the cluster.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/hintedHandoffEnabled",
                "default": true
              },
              "commitlogSyncPeriodInMs": {
                "description": "The number of milliseconds between disk fsync calls.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/commitlogSyncPeriodInMs",
                "default": 10000
              },
              "rangeRequestTimeoutInMs": {
                "description": "The time that the coordinator waits for range scans complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rangeRequestTimeoutInMs",
                "default": 10000
              },
              "rpcKeepalive": {
                "description": "Enables or TCP keepalive for RPC connections.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rpcKeepalive",
                "default": true
              },
              "batchSizeFailThresholdInKb": {
                "description": "Fail batch sizes exceeding this value in kilobytes. Caution should be taken on increasing the size of this threshold as it can lead to node instability.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/batchSizeFailThresholdInKb",
                "default": 50
              },
              "rowCacheSavePeriod": {
                "description": "Duration in seconds that rows are saved in cache. 0 disables caching.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rowCacheSavePeriod",
                "default": 0
              },
              "hintedHandoffThrottleInKb": {
                "description": "The maximum throttle per delivery thread in kilobytes per second.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/hintedHandoffThrottleInKb",
                "default": 1024
              },
              "compactionThroughputMbPerSec": {
                "description": "Throttles compaction to the specified total throughput across the node. Compaction frequency varies with direct proportion to write throughput and is necessary to limit the SSTable size. The recommended value is 16 to 32 times the rate of write throughput (in MB/second).",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/compactionThroughputMbPerSec",
                "default": 16
              },
              "partitioner": {
                "description": "The partitioner used to distribute rows across the cluster. Murmur3Partitioner is the recommended setting. RandomPartitioner and ByteOrderedPartitioner are supported for legacy applications.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/partitioner",
                "default": "org.apache.cassandra.dht.Murmur3Partitioner"
              },
              "concurrentCounterWrites": {
                "description": "Counter writes read the current values before incrementing and writing them back. The recommended value is (16 times the number of drives) .",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentCounterWrites",
                "default": 16
              },
              "casContentionTimeoutInMs": {
                "description": "The time for which the coordinator will retry CAS operations on the same row in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/casContentionTimeoutInMs",
                "default": 1000
              },
              "readRequestTimeoutInMs": {
                "description": "The time that the coordinator waits for read operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/readRequestTimeoutInMs",
                "default": 5000
              },
              "tombstoneFailureThreshold": {
                "description": "The maximum number of tombstones a query can scan before aborting.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/tombstoneFailureThreshold",
                "default": 100000
              },
              "maxHintWindowInMs": {
                "description": "The maximum amount of time, in ms, that hints are generates hints for an unresponsive node.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/maxHintWindowInMs",
                "default": 10800000
              },
              "thriftFramedTransportSizeInMb": {
                "description": "Frame size (maximum field length) for Thrift.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/thriftFramedTransportSizeInMb",
                "default": 15
              },
              "memtableAllocationType": {
                "description": "The type of allocations for the Cassandra memtable. heap_buffers keep all data on the JVM heap. offheap_buffers may reduce heap utilization for large string or binary values. offheap_objects may improve heap size for small integers or UUIDs as well. Both off heap options will increase read latency.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/memtableAllocationType",
                "default": "heap_buffers"
              },
              "dynamicSnitchUpdateIntervalInMs": {
                "description": "The time, in ms, the snitch will wait before updating node scores.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchUpdateIntervalInMs",
                "default": 100
              },
              "dynamicSnitchBadnessThreshold": {
                "description": "Sets the performance threshold for dynamically routing client requests away from a poorly performing node.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/dynamicSnitchBadnessThreshold",
                "default": 0.1
              },
              "rowCacheSizeInMb": {
                "description": "Maximum size of the row cache in memory. Row cache can save more time than key_cache_size_in_mb, but is space-intensive because it contains the entire row. Use the row cache only for hot rows or static rows. 0 disables the row cache.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rowCacheSizeInMb",
                "default": 0
              },
              "nativeTransportPort": {
                "description": "The port for CQL communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/nativeTransportPort",
                "default": 9042
              },
              "framework-name": {
                "description": "The name of the Cassandra service deployment.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/framework-name",
                "default": "cassandra"
              },
              "truncateRequestTimeoutInMs": {
                "description": "The time that the coordinator waits for truncate operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/truncateRequestTimeoutInMs",
                "default": 60000
              },
              "commitlogSegmentSizeInMb": {
                "description": "The size of each commit log segment in Mb.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/commitlogSegmentSizeInMb",
                "default": 32
              },
              "concurrentWrites": {
                "description": "Writes in Cassandra are rarely I/O bound, so the ideal number of concurrent writes depends on the number of CPU cores in your system. The recommended value is 8 times the number of cpu cores.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/concurrentWrites",
                "default": 32
              },
              "internodeCompression": {
                "description": "Controls whether traffic between nodes is compressed. all compresses all traffic. none compresses no traffic. dc compresses between datacenters.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/internodeCompression",
                "default": "all"
              },
              "writeRequestTimeoutInMs": {
                "description": "The time that the coordinator waits for write operations to complete in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/writeRequestTimeoutInMs",
                "default": 2000
              },
              "rpcPort": {
                "description": "The port for Thrift RPC communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/rpcPort",
                "default": 9160
              },
              "requestTimeoutInMs": {
                "description": "The default timeout for all other requests in ms.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/requestTimeoutInMs",
                "default": 10000
              },
              "jmxPort": {
                "description": "The JMX port that will be used to interface with the Cassandra application.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/jmxPort",
                "default": 7199
              },
              "interDcTcpNodelay": {
                "description": "Enables TCP no delay for inter-node communication.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/interDcTcpNodelay",
                "default": false
              },
              "startNativeTransport": {
                "description": "If true CQL is enabled.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/startNativeTransport",
                "default": true
              },
              "sslStoragePort": {
                "description": "The SSL port for inter-node communication.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/sslStoragePort",
                "default": 7001
              },
              "startRpc": {
                "description": "If true Thrift RPC is enable. This is deprecated by may be necessary for legacy applications.",
                "type": "boolean",
                "id": "http://cassandra/docs/mesosphere.com/cassandra/startRpc",
                "default": false
              }
            },
            "required": [
              "version",
              "jmxPort",
              "numTokens",
              "maxHintWindowInMs",
              "hintedHandoffThrottleInKb",
              "maxHintsDeliveryThreads",
              "batchlogReplayThrottleInKb",
              "partitioner",
              "keyCacheSavePeriod",
              "rowCacheSizeInMb",
              "rowCacheSavePeriod",
              "commitlogSyncPeriodInMs",
              "commitlogSegmentSizeInMb",
              "concurrentReads",
              "concurrentWrites",
              "concurrentCounterWrites",
              "memtableAllocationType",
              "indexSummaryResizeIntervalInMinutes",
              "storagePort",
              "sslStoragePort",
              "startNativeTransport",
              "nativeTransportPort",
              "startRpc",
              "rpcPort",
              "rpcKeepalive",
              "thriftFramedTransportSizeInMb",
              "tombstoneWarnThreshold",
              "tombstoneFailureThreshold",
              "columnIndexSizeInKb",
              "batchSizeWarnThresholdInKb",
              "batchSizeFailThresholdInKb",
              "compactionThroughputMbPerSec",
              "sstablePreemptiveOpenIntervalInMb",
              "readRequestTimeoutInMs",
              "rangeRequestTimeoutInMs",
              "writeRequestTimeoutInMs",
              "counterWriteRequestTimeoutInMs",
              "casContentionTimeoutInMs",
              "truncateRequestTimeoutInMs",
              "requestTimeoutInMs",
              "dynamicSnitchUpdateIntervalInMs",
              "dynamicSnitchResetIntervalInMs",
              "dynamicSnitchBadnessThreshold",
              "internodeCompression",
              "interDcTcpNodelay"
            ]
          },
          "service": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/service",
            "properties": {
              "adminPort": {
                "description": "The port that the service scheduler and executor listen on for health check and admin requests.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/apiPort",
                "default": 9001
              },
              "apiPort": {
                "description": "The port that the service scheduler and executor listen on for API requests.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/service/apiPort",
                "default": 9000
              },
              "principal": {
                "description": "The authentication principal for the framework.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/principal",
                "default": "cassandra_principal"
              },
              "plan-strategy": {
                "description": "Broker placement strategy. See documentation. [INSTALL, STAGE]",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/plan-strategy",
                "default": "INSTALL"
              },
              "user": {
                "description": "The user that the service will run as.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/user",
                "default": "root"
              },
              "role": {
                "description": "The authentication role of the service",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/role",
                "default": "cassandra_role"
              },
              "placement_strategy": {
                "description": "The placement strategy for Cassandra nodes. This should always be NODE.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/placement_strategy",
                "default": "NODE"
              },
              "name": {
                "description": "The name of the Cassandra service deployment.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/name",
                "default": "cassandra"
              },
              "secret": {
                "description": "The path to the file containing the authentication secret for the framework.",
                "type": "string",
                "id": "http://cassandra/docs/mesosphere.com/service/secret"
              }
            },
            "description": "The Cassandra service configuration object.",
            "type": "object",
            "required": [
              "name",
              "role",
              "principal",
              "user",
              "placement_strategy",
              "apiPort",
              "adminPort"
            ]
          },
          "node": {
            "additionalProperties": false,
            "id": "http://cassandra/docs/mesosphere.com/node",
            "properties": {
              "disk": {
                "description": "The amount of disk, in MB, allocated to the Cassandra process.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/disk",
                "default": 10240
              },
              "volume_size": {
                "description": "The size of the persistent volume, in MB, allocated to the Cassandra process.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/volume_size",
                "default": 9216
              },
              "mem": {
                "description": "The amount of memory, in MB, allocated to the Cassandra process.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/mem",
                "default": 4096
              },
              "seeds": {
                "description": "The number of Cassandra seed nodes in the cluster",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/seeds",
                "default": 2
              },
              "count": {
                "description": "The number of Cassandra nodes in the cluster.",
                "type": "integer",
                "id": "http://cassandra/docs/mesosphere.com/node/count",
                "default": 3
              },
              "heap": {
                "additionalProperties": false,
                "id": "http://cassandra/docs/mesosphere.com/node/heap",
                "properties": {
                  "new": {
                    "description": "The amount of JVM new generation heap, in MB, allocated to the Cassandra process.",
                    "type": "integer",
                    "id": "http://cassandra/docs/mesosphere.com/node/heap/new",
                    "default": 100
                  },
                  "size": {
                    "description": "The amount of JVM heap, in MB, allocated to the Cassandra process.",
                    "type": "integer",
                    "id": "http://cassandra/docs/mesosphere.com/node/heap/size",
                    "default": 2048
                  }
                },
                "description": "The Cassandra process JVM heap configuration object.",
                "type": "object",
                "required": [
                  "size",
                  "new"
                ]
              },
              "cpus": {
                "description": "The number of cpu shares allocated to the Cassandra process.",
                "type": "number",
                "id": "http://cassandra/docs/mesosphere.com/node/cpus",
                "default": 0.5
              }
            },
            "description": "Configuration object for Cassandra nodes",
            "type": "object",
            "required": [
              "cpus",
              "mem",
              "disk",
              "heap",
              "volume_size",
              "count",
              "seeds"
            ]
          }
        },
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "required": [
          "service",
          "node",
          "cassandra"
        ]
      },
      "selected": true,
      "tags": [
        "data",
        "database",
        "nosql"
      ],
      "preInstallNotes": "You are about the DCOS Apache Cassandra service. The current Cassandra version is 2.2.5",
      "framework": true,
      "marathon": {
        "v2AppMustacheTemplate": "ewogICJpZCI6ICIve3tzZXJ2aWNlLm5hbWV9fSIsCiAgImNtZCI6ICIuL3NjaGVkdWxlci9iaW4vY2Fzc2FuZHJhLXNjaGVkdWxlciBzZXJ2ZXIgLi9zY2hlZHVsZXIvY29uZi9zY2hlZHVsZXIueW1sIiwKICAiaW5zdGFuY2VzIjogMSwKICAiY3B1cyI6IDAuNSwKICAibWVtIjogMjA0OCwKICAicmVxdWlyZVBvcnRzIjogdHJ1ZSwKICAicG9ydHMiOiBbCiAgICA5MDAwLCAKICAgIDkwMDEKICBdLAoidXJpcyI6IFsKInt7cmVzb3VyY2UuYXNzZXRzLnVyaXMuc2NoZWR1bGVyLXppcH19IiwKInt7cmVzb3VyY2UuYXNzZXRzLnVyaXMuanJlLXRhci1nen19IgpdLAoiaGVhbHRoQ2hlY2tzIjogWwogICAgewogICAgICAicHJvdG9jb2wiOiAiQ09NTUFORCIsCiAgICAgICJjb21tYW5kIjogeyAidmFsdWUiOiAiY3VybCAtZiAtWCBHRVQgaHR0cDovLyRIT1NUOnt7c2VydmljZS5hZG1pblBvcnR9fS9oZWFsdGhjaGVjayIgfSwKICAgICAgImdyYWNlUGVyaW9kU2Vjb25kcyI6IDMwMCwKICAgICAgImludGVydmFsU2Vjb25kcyI6IDYwLAogICAgICAidGltZW91dFNlY29uZHMiOiA2MCwKICAgICAgIm1heENvbnNlY3V0aXZlRmFpbHVyZXMiOiAzCiAgICB9Cl0sCiJsYWJlbHMiOiB7CiJEQ09TX1BBQ0tBR0VfRlJBTUVXT1JLX05BTUUiOiAie3tzZXJ2aWNlLm5hbWV9fSIKfSwKImVudiI6ewoiSkFWQV9IT01FIjoiLi9qcmUiCiwiRlJBTUVXT1JLX05BTUUiOiJ7e3NlcnZpY2UubmFtZX19IgosIkZSQU1FV09SS19WRVJTSU9OIjoiMC4xLjAiCiwiRlJBTUVXT1JLX1JPTEUiOiJ7e3NlcnZpY2Uucm9sZX19IgosIkZSQU1FV09SS19QUklOQ0lQQUwiOiJ7e3NlcnZpY2UucHJpbmNpcGFsfX0iCiwiQ0FTU0FORFJBX1ZFUlNJT04iOiJ7e2Nhc3NhbmRyYS52ZXJzaW9ufX0iCiwiQ0FTU0FORFJBX0NQVVMiOiJ7e25vZGUuY3B1c319IgosIkNBU1NBTkRSQV9NRU1PUllfTUIiOiJ7e25vZGUubWVtfX0iCiwiQ0FTU0FORFJBX0RJU0tfTUIiOiJ7e25vZGUuZGlza319IgosIkNBU1NBTkRSQV9IRUFQX1NJWkVfTUIiOiJ7e25vZGUuaGVhcC5zaXplfX0iCiwiQ0FTU0FORFJBX0hFQVBfTkVXX01CIjoie3tub2RlLmhlYXAubmV3fX0iCiwiQ0FTU0FORFJBX0pNWF9QT1JUIjoie3tjYXNzYW5kcmEuam14UG9ydH19IgosIkNBU1NBTkRSQV9WT0xVTUVfU0laRV9NQiI6Int7bm9kZS52b2x1bWVfc2l6ZX19IgosIkNBU1NBTkRSQV9OVU1fVE9LRU5TIjoie3tjYXNzYW5kcmEubnVtVG9rZW5zfX0iCiwiQ0FTU0FORFJBX0hJTlRFRF9IQU5ET0ZGX0VOQUJMRUQiOiJ7e2Nhc3NhbmRyYS5oaW50ZWRIYW5kb2ZmRW5hYmxlZH19IgosIkNBU1NBTkRSQV9NQVhfSElOVF9XSU5ET1dfSU5fTVMiOiJ7e2Nhc3NhbmRyYS5tYXhIaW50V2luZG93SW5Nc319IgosIkNBU1NBTkRSQV9ISU5URURfSEFORE9GRl9USFJPVFRMRV9JTl9LQiI6Int7Y2Fzc2FuZHJhLmhpbnRlZEhhbmRvZmZUaHJvdHRsZUluS2J9fSIKLCJDQVNTQU5EUkFfTUFYX0hJTlRTX0RFTElWRVJZX1RIUkVBRFMiOiJ7e2Nhc3NhbmRyYS5tYXhIaW50c0RlbGl2ZXJ5VGhyZWFkc319IgosIkNBU1NBTkRSQV9CQVRDSExPR19SRVBMQVlfVEhST1RUTEVfSU5fS0IiOiJ7e2Nhc3NhbmRyYS5iYXRjaGxvZ1JlcGxheVRocm90dGxlSW5LYn19IgosIkNBU1NBTkRSQV9QQVJUSVRJT05FUiI6Int7Y2Fzc2FuZHJhLnBhcnRpdGlvbmVyfX0iCiwiQ0FTU0FORFJBX1BFUlNJU1RFTlRfVk9MVU1FIjoidm9sdW1lIgosIkNBU1NBTkRSQV9ESVNLX0ZBSUxVUkVfUE9MSUNZIjoic3RvcCIKLCJDQVNTQU5EUkFfQ09NTUlUX0ZBSUxVUkVfUE9MSUNZIjoic3RvcCIKLCJDQVNTQU5EUkFfS0VZX0NBQ0hFX1NBVkVfUEVSSU9EIjoie3tjYXNzYW5kcmEua2V5Q2FjaGVTYXZlUGVyaW9kfX0iCiwiQ0FTU0FORFJBX1JPV19DQUNIRV9TSVpFX0lOX01CIjoie3tjYXNzYW5kcmEucm93Q2FjaGVTaXplSW5NYn19IgosIkNBU1NBTkRSQV9ST1dfQ0FDSEVfU0FWRV9QRVJJT0QiOiJ7e2Nhc3NhbmRyYS5yb3dDYWNoZVNhdmVQZXJpb2R9fSIKLCJDQVNTQU5EUkFfQ09NTUlUTE9HX1NZTkMiOiJwZXJpb2RpYyIKLCJDQVNTQU5EUkFfQ09NTUlUTE9HX1NZTkNfUEVSSU9EX0lOX01TIjoie3tjYXNzYW5kcmEuY29tbWl0bG9nU3luY1BlcmlvZEluTXN9fSIKLCJDQVNTQU5EUkFfQ09NTUlUTE9HX1NFR01FTlRfU0laRV9JTl9NQiI6Int7Y2Fzc2FuZHJhLmNvbW1pdGxvZ1NlZ21lbnRTaXplSW5NYn19IgosIkNBU1NBTkRSQV9DT05DVVJSRU5UX1JFQURTIjoie3tjYXNzYW5kcmEuY29uY3VycmVudFJlYWRzfX0iCiwiQ0FTU0FORFJBX0NPTkNVUlJFTlRfV1JJVEVTIjoie3tjYXNzYW5kcmEuY29uY3VycmVudFdyaXRlc319IgosIkNBU1NBTkRSQV9DT05DVVJSRU5UX0NPVU5URVJfV1JJVEVTIjoie3tjYXNzYW5kcmEuY29uY3VycmVudENvdW50ZXJXcml0ZXN9fSIKLCJDQVNTQU5EUkFfTUVNVEFCTEVfQUxMT0NBVElPTl9UWVBFIjoie3tjYXNzYW5kcmEubWVtdGFibGVBbGxvY2F0aW9uVHlwZX19IgosIkNBU1NBTkRSQV9JTkRFWF9TVU1NQVJZX1JFU0laRV9JTlRFUlZBTF9JTl9NSU5VVEVTIjoie3tjYXNzYW5kcmEuaW5kZXhTdW1tYXJ5UmVzaXplSW50ZXJ2YWxJbk1pbnV0ZXN9fSIKLCJDQVNTQU5EUkFfVFJJQ0tMRV9GU1lOQyI6ImZhbHNlIgosIkNBU1NBTkRSQV9UUklDS0xFX0ZTWU5DX0lOVEVSVkFMX0lOX0tCIjoiMTAyNDAiCiwiQ0FTU0FORFJBX1NUT1JBR0VfUE9SVCI6Int7Y2Fzc2FuZHJhLnN0b3JhZ2VQb3J0fX0iCiwiQ0FTU0FORFJBX1NTTF9TVE9SQUdFX1BPUlQiOiJ7e2Nhc3NhbmRyYS5zc2xTdG9yYWdlUG9ydH19IgosIkNBU1NBTkRSQV9TVEFSVF9OQVRJVkVfVFJBTlNQT1JUIjoie3tjYXNzYW5kcmEuc3RhcnROYXRpdmVUcmFuc3BvcnR9fSIKLCJDQVNTQU5EUkFfTkFUSVZFX1RSQU5TUE9SVF9QT1JUIjoie3tjYXNzYW5kcmEubmF0aXZlVHJhbnNwb3J0UG9ydH19IgosIkNBU1NBTkRSQV9TVEFSVF9SUEMiOiJ7e2Nhc3NhbmRyYS5zdGFydFJwY319IgosIkNBU1NBTkRSQV9SUENfUE9SVCI6Int7Y2Fzc2FuZHJhLnJwY1BvcnR9fSIKLCJDQVNTQU5EUkFfUlBDX0tFRVBBTElWRSI6Int7Y2Fzc2FuZHJhLnJwY0tlZXBhbGl2ZX19IgosIkNBU1NBTkRSQV9SUENfU0VSVkVSX1RZUEUiOiJzeW5jIgosIkNBU1NBTkRSQV9USFJJRlRfRlJBTUVEX1RSQU5TUE9SVF9TSVpFX0lOX01CIjoie3tjYXNzYW5kcmEudGhyaWZ0RnJhbWVkVHJhbnNwb3J0U2l6ZUluTWJ9fSIKLCJDQVNTQU5EUkFfVE9NQlNUT05FX1dBUk5fVEhSRVNIT0xEIjoie3tjYXNzYW5kcmEudG9tYnN0b25lV2FyblRocmVzaG9sZH19IgosIkNBU1NBTkRSQV9UT01CU1RPTkVfRkFJTFVSRV9USFJFU0hPTEQiOiJ7e2Nhc3NhbmRyYS50b21ic3RvbmVGYWlsdXJlVGhyZXNob2xkfX0iCiwiQ0FTU0FORFJBX0NPTFVNTl9JTkRFWF9TSVpFX0lOX0tCIjoie3tjYXNzYW5kcmEuY29sdW1uSW5kZXhTaXplSW5LYn19IgosIkNBU1NBTkRSQV9CQVRDSF9TSVpFX1dBUk5fVEhSRVNIT0xEX0lOX0tCIjoie3tjYXNzYW5kcmEuYmF0Y2hTaXplV2FyblRocmVzaG9sZEluS2J9fSIKLCJDQVNTQU5EUkFfQkFUQ0hfU0laRV9GQUlMX1RIUkVTSE9MRF9JTl9LQiI6Int7Y2Fzc2FuZHJhLmJhdGNoU2l6ZUZhaWxUaHJlc2hvbGRJbktifX0iCiwiQ0FTU0FORFJBX0NPTVBBQ1RJT05fVEhST1VHSFBVVF9NQl9QRVJfU0VDIjoie3tjYXNzYW5kcmEuY29tcGFjdGlvblRocm91Z2hwdXRNYlBlclNlY319IgosIkNBU1NBTkRSQV9DT01QQUNUSU9OX0xBUkdFX1BBUlRJVElPTl9XQVJOSU5HX1RIUkVTSE9MRF9NQiI6IjEwMCIKLCJDQVNTQU5EUkFfU1NUQUJMRV9QUkVFTVBUSVZFX09QRU5fSU5URVJWQUxfSU5fTUIiOiJ7e2Nhc3NhbmRyYS5zc3RhYmxlUHJlZW1wdGl2ZU9wZW5JbnRlcnZhbEluTWJ9fSIKLCJDQVNTQU5EUkFfUkVBRF9SRVFVRVNUX1RJTUVPVVRfSU5fTVMiOiJ7e2Nhc3NhbmRyYS5yZWFkUmVxdWVzdFRpbWVvdXRJbk1zfX0iCiwiQ0FTU0FORFJBX1JBTkdFX1JFUVVFU1RfVElNRU9VVF9JTl9NUyI6Int7Y2Fzc2FuZHJhLnJhbmdlUmVxdWVzdFRpbWVvdXRJbk1zfX0iCiwiQ0FTU0FORFJBX1dSSVRFX1JFUVVFU1RfVElNRU9VVF9JTl9NUyI6Int7Y2Fzc2FuZHJhLndyaXRlUmVxdWVzdFRpbWVvdXRJbk1zfX0iCiwiQ0FTU0FORFJBX0NPVU5URVJfV1JJVEVfUkVRVUVTVF9USU1FT1VUX0lOX01TIjoie3tjYXNzYW5kcmEuY291bnRlcldyaXRlUmVxdWVzdFRpbWVvdXRJbk1zfX0iCiwiQ0FTU0FORFJBX0NBU19DT05URU5USU9OX1RJTUVPVVRfSU5fTVMiOiJ7e2Nhc3NhbmRyYS5jYXNDb250ZW50aW9uVGltZW91dEluTXN9fSIKLCJDQVNTQU5EUkFfVFJVTkNBVEVfUkVRVUVTVF9USU1FT1VUX0lOX01TIjoie3tjYXNzYW5kcmEudHJ1bmNhdGVSZXF1ZXN0VGltZW91dEluTXN9fSIKLCJDQVNTQU5EUkFfUkVRVUVTVF9USU1FT1VUX0lOX01TIjoie3tjYXNzYW5kcmEucmVxdWVzdFRpbWVvdXRJbk1zfX0iCiwiQ0FTU0FORFJBX0NST1NTX05PREVfVElNRU9VVCI6ImZhbHNlIgosIkNBU1NBTkRSQV9EWU5BTUlDX1NOSVRDSF9VUERBVEVfSU5URVJWQUxfSU5fTVMiOiJ7e2Nhc3NhbmRyYS5keW5hbWljU25pdGNoVXBkYXRlSW50ZXJ2YWxJbk1zfX0iCiwiQ0FTU0FORFJBX0RZTkFNSUNfU05JVENIX1JFU0VUX0lOVEVSVkFMX0lOX01TIjoie3tjYXNzYW5kcmEuZHluYW1pY1NuaXRjaFJlc2V0SW50ZXJ2YWxJbk1zfX0iCiwiQ0FTU0FORFJBX0RZTkFNSUNfU05JVENIX0JBRE5FU1NfVEhSRVNIT0xEIjoie3tjYXNzYW5kcmEuZHluYW1pY1NuaXRjaEJhZG5lc3NUaHJlc2hvbGR9fSIKLCJDQVNTQU5EUkFfUkVRVUVTVF9TQ0hFRFVMRVIiOiJvcmcuYXBhY2hlLmNhc3NhbmRyYS5zY2hlZHVsZXIuTm9TY2hlZHVsZXIiCiwiQ0FTU0FORFJBX0lOVEVSTk9ERV9DT01QUkVTU0lPTiI6Int7Y2Fzc2FuZHJhLmludGVybm9kZUNvbXByZXNzaW9ufX0iCiwiQ0FTU0FORFJBX0lOVEVSX0RDX1RDUF9OT0RFTEFZIjoie3tjYXNzYW5kcmEuaW50ZXJEY1RjcE5vZGVsYXl9fSIKLCJDQVNTQU5EUkFfVFJBQ0VUWVBFX1FVRVJZX1RUTCI6Ijg2NDAwIgosIkNBU1NBTkRSQV9UUkFDRVRZUEVfUkVQQUlSX1RUTCI6IjYwNDgwMCIKLCJDQVNTQU5EUkFfV0lORE9XU19USU1FUl9JTlRFUlZBTCI6IjEiCiwiRVhFQ1VUT1JfQ09NTUFORCI6Ii4vZXhlY3V0b3IvYmluL2Nhc3NhbmRyYS1leGVjdXRvciBzZXJ2ZXIgZXhlY3V0b3IvY29uZi9leGVjdXRvci55bWwiCiwiRVhFQ1VUT1JfQ1BVUyI6IjAuNSIKLCJFWEVDVVRPUl9NRU1PUllfTUIiOiI3NjgiCiwiRVhFQ1VUT1JfRElTS19NQiI6IjEwMjQiCiwiRVhFQ1VUT1JfSEVBUF9NQiI6IjUxMiIKLCJFWEVDVVRPUl9BUElfUE9SVCI6Int7c2VydmljZS5hcGlQb3J0fX0iCiwiRVhFQ1VUT1JfQURNSU5fUE9SVCI6IjkwMDEiCiwiRVhFQ1VUT1JfSkFWQV9IT01FIjoiLi9qcmUiCiwiRVhFQ1VUT1JfSlJFX0xPQ0FUSU9OIjoie3tyZXNvdXJjZS5hc3NldHMudXJpcy5qcmUtdGFyLWd6fX0iCiwiRVhFQ1VUT1JfTE9DQVRJT04iOiJ7e3Jlc291cmNlLmFzc2V0cy51cmlzLmV4ZWN1dG9yLXppcH19IgosIkVYRUNVVE9SX0NBU1NBTkRSQV9MT0NBVElPTiI6Int7cmVzb3VyY2UuYXNzZXRzLnVyaXMuYXBhY2hlLWNhc3NhbmRyYS1iaW4tdGFyLWd6fX0iCiwiQ0xVU1RFUl9UQVNLX0NQVVMiOiIxLjAiCiwiQ0xVU1RFUl9UQVNLX01FTU9SWV9NQiI6IjI1NiIKLCJOT0RFUyI6Int7bm9kZS5jb3VudH19IgosIlNFRURfTk9ERVMiOiJ7e25vZGUuc2VlZHN9fSIKLCJQTEFDRU1FTlRfU1RSQVRFR1kiOiJ7e3NlcnZpY2UucGxhY2VtZW50X3N0cmF0ZWd5fX0iCiwiUEhBU0VfU1RSQVRFR1kiOiJvcmcuYXBhY2hlLm1lc29zLnNjaGVkdWxlci5wbGFuLkRlZmF1bHRJbnN0YWxsU3RyYXRlZ3kiCiwiQVBJX1BPUlQiOiJ7e3NlcnZpY2UuYXBpUG9ydH19IgosIkFETUlOX1BPUlQiOiJ7e3NlcnZpY2UuYWRtaW5Qb3J0fX0iCn0KfQo="
      },
      "postInstallNotes": "Your Cassandra cluster is being deployed.",
      "releaseVersion": 3,
      "scm": "https://github.com/mesosphere/cassandra-mesos.git",
      "licenses": [
        {
          "url": "https://github.com/mesosphere/cassandra-mesos/blob/master/LICENSE.txt",
          "name": "Apache License Version 2.0"
        }
      ],
      "name": "cassandra",
      "packagingVersion": "3.0",
      "minDcosReleaseVersion": "1.7",
      "description": "Apache Cassandra running on DCOS",
      "resource": {
        "assets": {
          "uris": {
            "scheduler-zip": "https://s3-us-west-2.amazonaws.com/cassandra-framework-dev/ken/scheduler.zip",
            "jre-tar-gz": "https://s3-us-west-2.amazonaws.com/cassandra-framework-dev/jre/linux/server-jre-8u74-linux-x64.tar.gz",
            "apache-cassandra-bin-tar-gz": "https://s3-us-west-2.amazonaws.com/cassandra-framework-dev/testing/apache-cassandra-2.2.5-bin.tar.gz",
            "executor-zip": "https://s3-us-west-2.amazonaws.com/cassandra-framework-dev/ken/executor.zip"
          }
        },
        "images": {
          "icon-large": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-large.png",
          "icon-small": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-small.png",
          "icon-medium": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-medium.png"
        }
      },
      "postUninstallNotes": "Your Cassandra cluster has been uninstalled. Please run the framework_cleaner to remove any persistent state if required.",
      "pip": [
        "https://s3-us-west-2.amazonaws.com/cassandra-framework-dev/testing/dcos-cassandra-0.1.0.tar.gz"
      ],
      "maintainer": "support@mesosphere.io"
    },
    {
      "version": "0.2.0-1",
      "config": {
        "type": "object",
        "properties": {
          "mesos": {
            "description": "Mesos specific configuration properties",
            "type": "object",
            "properties": {
              "master": {
                "description": "The URL of the Mesos master. The format is a comma-delimited list of hosts like zk://host1:port,host2:port/mesos. If using ZooKeeper, pay particular attention to the leading zk:// and trailing /mesos! If not using ZooKeeper, standard host:port patterns, like localhost:5050 or 10.0.0.5:5050,10.0.0.6:5050, are also acceptable.",
                "default": "zk://master.mesos:2181/mesos",
                "type": "string"
              }
            },
            "required": [
              "master"
            ]
          },
          "cassandra": {
            "description": "Cassandra Framework Configuration Properties",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "node-count": {
                "description": "The number of nodes in the ring for the framework to run.",
                "type": "integer",
                "default": 3,
                "minimum": 1
              },
              "dc": {
                "description": "Cassandra multi Datacenter Configuration Properties",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "default-dc": {
                    "description": "Default value to be set for dc name in the GossipingPropertyFileSnitch",
                    "type": "string",
                    "default": "DC1"
                  },
                  "default-rack": {
                    "description": "Default value to be set for rack name in the GossipingPropertyFileSnitch",
                    "type": "string",
                    "default": "RAC1"
                  },
                  "external-dcs": {
                    "description": "Name and URL for another instance of Cassandra DCOS Service",
                    "additionalProperties": false,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "url"
                      ]
                    }
                  }
                },
                "required": [
                  "default-dc",
                  "default-rack"
                ]
              },
              "zk-timeout-ms": {
                "description": "Timeout for ZooKeeper in milliseconds.",
                "type": "integer",
                "default": 10000,
                "minimum": 0
              },
              "zk": {
                "description": "ZooKeeper URL for storing state. Format: zk://host1:port1,host2:port2,.../path (can have nested directories)",
                "type": "string"
              },
              "cluster-name": {
                "description": "The name of the framework to register with mesos. Will also be used as the cluster name in Cassandra",
                "type": "string",
                "default": "dcos"
              },
              "health-check-interval-seconds": {
                "description": "The interval in seconds that the framework should check the health of each Cassandra Server instance.",
                "type": "integer",
                "default": 60,
                "minimum": 15
              },
              "seed-count": {
                "description": "The number of seed nodes in the ring for the framework to run.",
                "type": "integer",
                "default": 2,
                "minimum": 1
              },
              "bootstrap-grace-time-seconds": {
                "description": "The minimum number of seconds to wait between starting each node. Setting this too low could result in the ring not bootstrapping correctly.",
                "type": "integer",
                "default": 120,
                "minimum": 15
              },
              "data-directory": {
                "description": "The location on disk where Cassandra will be configured to write it's data.",
                "type": "string",
                "default": "."
              },
              "resources": {
                "description": "Cassandra Server Resources Configuration Properties",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "disk": {
                    "description": "Disk (MB) to allocate to each Cassandra Server instance.",
                    "type": "integer",
                    "default": 16,
                    "minimum": 0
                  },
                  "mem": {
                    "description": "Memory (MB) to allocate to each Cassandra Server instance.",
                    "type": "integer",
                    "default": 768,
                    "minimum": 0
                  },
                  "heap-mb": {
                    "description": "The amount of memory in MB that are allocated to each Cassandra Server Instance. This value should be smaller than 'cassandra.resources.mem'. The remaining difference will be used for memory mapped files and other off-heap memory requirements.",
                    "type": "integer",
                    "minimum": 0
                  },
                  "cpus": {
                    "description": "CPU shares to allocate to each Cassandra Server Instance.",
                    "type": "number",
                    "default": 0.1,
                    "minimum": 0.0
                  }
                },
                "required": [
                  "cpus",
                  "mem",
                  "disk"
                ]
              },
              "framework": {
                "description": "Framework Scheduler specific Configuration Properties",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "mem": {
                    "description": "Memory (MB) to allocate to each Cassandra framework instance.",
                    "default": 512.0,
                    "type": "number",
                    "minimum": 512.0
                  },
                  "authentication": {
                    "description": "Framework Scheduler Authentication Configuration Properties",
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "description": "Whether framework authentication should be used",
                        "type": "boolean",
                        "default": false
                      },
                      "principal": {
                        "description": "The Mesos principal used for authentication.",
                        "type": "string"
                      },
                      "secret": {
                        "description": "The path to the Mesos secret file containing the authentication secret.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "enabled"
                    ]
                  },
                  "instances": {
                    "description": "Number of Cassandra framework instances to run.",
                    "default": 1,
                    "type": "integer",
                    "minimum": 0
                  },
                  "failover-timeout-seconds": {
                    "description": "The failover_timeout for Mesos in seconds. If the framework instance has not re-registered with Mesos this long after a failover, Mesos will shut down all running tasks started by the framework.",
                    "type": "integer",
                    "default": 604800,
                    "minimum": 0
                  },
                  "cpus": {
                    "description": "CPU shares to allocate to each Cassandra framework instance.",
                    "default": 0.5,
                    "type": "number"
                  },
                  "role": {
                    "description": "Mesos role for this framework.",
                    "type": "string",
                    "default": "*"
                  }
                },
                "required": [
                  "instances",
                  "cpus",
                  "mem",
                  "failover-timeout-seconds",
                  "role",
                  "authentication"
                ]
              }
            },
            "required": [
              "framework",
              "cluster-name",
              "zk-timeout-ms",
              "node-count",
              "seed-count",
              "health-check-interval-seconds",
              "bootstrap-grace-time-seconds",
              "data-directory",
              "resources"
            ]
          }
        },
        "required": [
          "mesos",
          "cassandra"
        ]
      },
      "selected": true,
      "tags": [
        "data",
        "database",
        "nosql"
      ],
      "preInstallNotes": "The Apache Cassandra DCOS Service implementation is alpha and there may be bugs, incomplete features, incorrect documentation or other discrepancies.\nThe default configuration requires 3 nodes each with 0.3 CPU shares, 1184MB of memory and 272MB of disk.",
      "postUninstallNotes": "The Apache Cassandra DCOS Service has been uninstalled and will no longer run.\nPlease follow the instructions at https://docs.mesosphere.com/usage/services/cassandra/#uninstall to clean up any persisted state",
      "marathon": {
        "v2AppMustacheTemplate": "ewogICJpZCI6ICIvY2Fzc2FuZHJhL3t7Y2Fzc2FuZHJhLmNsdXN0ZXItbmFtZX19IiwKICAiY21kIjogIiQocHdkKS9qcmUqL2Jpbi9qYXZhICRKQVZBX09QVFMgLWNsYXNzcGF0aCBjYXNzYW5kcmEtbWVzb3MtZnJhbWV3b3JrLmphciBpby5tZXNvc3BoZXJlLm1lc29zLmZyYW1ld29ya3MuY2Fzc2FuZHJhLmZyYW1ld29yay5NYWluIiwKICAiaW5zdGFuY2VzIjoge3tjYXNzYW5kcmEuZnJhbWV3b3JrLmluc3RhbmNlc319LAogICJjcHVzIjoge3tjYXNzYW5kcmEuZnJhbWV3b3JrLmNwdXN9fSwKICAibWVtIjoge3tjYXNzYW5kcmEuZnJhbWV3b3JrLm1lbX19LAogICJwb3J0cyI6IFsKICAgIDAKICBdLAogICJ1cmlzIjogWwogICAgInt7cmVzb3VyY2UuYXNzZXRzLnVyaXMuY2Fzc2FuZHJhLW1lc29zLTAtMi0wLTEtdGFyLWd6fX0iLAogICAgInt7cmVzb3VyY2UuYXNzZXRzLnVyaXMuanJlLTd1NzYtbGludXgteDY0LXRhci1nen19IgogIF0sCiAgImhlYWx0aENoZWNrcyI6IFsKICAgIHsKICAgICAgImdyYWNlUGVyaW9kU2Vjb25kcyI6IDEyMCwKICAgICAgImludGVydmFsU2Vjb25kcyI6IDE1LAogICAgICAibWF4Q29uc2VjdXRpdmVGYWlsdXJlcyI6IDAsCiAgICAgICJwYXRoIjogIi9oZWFsdGgvY2x1c3RlciIsCiAgICAgICJwb3J0SW5kZXgiOiAwLAogICAgICAicHJvdG9jb2wiOiAiSFRUUCIsCiAgICAgICJ0aW1lb3V0U2Vjb25kcyI6IDUKICAgIH0sCiAgICB7CiAgICAgICJncmFjZVBlcmlvZFNlY29uZHMiOiAxMjAsCiAgICAgICJpbnRlcnZhbFNlY29uZHMiOiAzMCwKICAgICAgIm1heENvbnNlY3V0aXZlRmFpbHVyZXMiOiAzLAogICAgICAicGF0aCI6ICIvaGVhbHRoL3Byb2Nlc3MiLAogICAgICAicG9ydEluZGV4IjogMCwKICAgICAgInByb3RvY29sIjogIkhUVFAiLAogICAgICAidGltZW91dFNlY29uZHMiOiA1CiAgICB9CiAgXSwKICAibGFiZWxzIjogewogICAgIkRDT1NfUEFDS0FHRV9GUkFNRVdPUktfTkFNRSI6ICJjYXNzYW5kcmEue3tjYXNzYW5kcmEuY2x1c3Rlci1uYW1lfX0iCiAgfSwKICAiZW52IjogewogICAgIk1FU09TX1pLIjogInt7bWVzb3MubWFzdGVyfX0iCiAgICAsIkpBVkFfT1BUUyI6ICItWG1zMjU2bSAtWG14MjU2bSIKICAgICwiQ0FTU0FORFJBX0NMVVNURVJfTkFNRSI6ICJ7e2Nhc3NhbmRyYS5jbHVzdGVyLW5hbWV9fSIKICAgICwiQ0FTU0FORFJBX05PREVfQ09VTlQiOiAie3tjYXNzYW5kcmEubm9kZS1jb3VudH19IgogICAgLCJDQVNTQU5EUkFfU0VFRF9DT1VOVCI6ICJ7e2Nhc3NhbmRyYS5zZWVkLWNvdW50fX0iCiAgICAsIkNBU1NBTkRSQV9SRVNPVVJDRV9DUFVfQ09SRVMiOiAie3tjYXNzYW5kcmEucmVzb3VyY2VzLmNwdXN9fSIKICAgICwiQ0FTU0FORFJBX1JFU09VUkNFX01FTV9NQiI6ICJ7e2Nhc3NhbmRyYS5yZXNvdXJjZXMubWVtfX0iCiAgICAsIkNBU1NBTkRSQV9SRVNPVVJDRV9ESVNLX01CIjogInt7Y2Fzc2FuZHJhLnJlc291cmNlcy5kaXNrfX0iCiAgICAsIkNBU1NBTkRSQV9GQUlMT1ZFUl9USU1FT1VUX1NFQ09ORFMiOiAie3tjYXNzYW5kcmEuZnJhbWV3b3JrLmZhaWxvdmVyLXRpbWVvdXQtc2Vjb25kc319IgogICAgLCJDQVNTQU5EUkFfREFUQV9ESVJFQ1RPUlkiOiAie3tjYXNzYW5kcmEuZGF0YS1kaXJlY3Rvcnl9fSIKICAgICwiQ0FTU0FORFJBX0hFQUxUSF9DSEVDS19JTlRFUlZBTF9TRUNPTkRTIjogInt7Y2Fzc2FuZHJhLmhlYWx0aC1jaGVjay1pbnRlcnZhbC1zZWNvbmRzfX0iCiAgICAsIkNBU1NBTkRSQV9aS19USU1FT1VUX01TIjogInt7Y2Fzc2FuZHJhLnprLXRpbWVvdXQtbXN9fSIKICAgICwiQ0FTU0FORFJBX0JPT1RTVFJBUF9HUkFDRV9USU1FX1NFQ09ORFMiOiAie3tjYXNzYW5kcmEuYm9vdHN0cmFwLWdyYWNlLXRpbWUtc2Vjb25kc319IgogICAgLCJDQVNTQU5EUkFfRlJBTUVXT1JLX01FU09TX1JPTEUiOiAie3tjYXNzYW5kcmEuZnJhbWV3b3JrLnJvbGV9fSIKICAgICwiQ0FTU0FORFJBX0RFRkFVTFRfREMiOiAie3tjYXNzYW5kcmEuZGMuZGVmYXVsdC1kY319IgogICAgLCJDQVNTQU5EUkFfREVGQVVMVF9SQUNLIjogInt7Y2Fzc2FuZHJhLmRjLmRlZmF1bHQtcmFja319IgogICAgLCJNRVNPU19BVVRIRU5USUNBVEUiOiAie3tjYXNzYW5kcmEuZnJhbWV3b3JrLmF1dGhlbnRpY2F0aW9uLmVuYWJsZWR9fSIKe3sjY2Fzc2FuZHJhLmRjLmV4dGVybmFsLWRjc319CiAgICAsIkNBU1NBTkRSQV9FWFRFUk5BTF9EQ197e25hbWV9fSI6ICJ7e3VybH19Igp7ey9jYXNzYW5kcmEuZGMuZXh0ZXJuYWwtZGNzfX0Ke3sjY2Fzc2FuZHJhLnprfX0ge3shIGlmIHRoZSBmdWxsIGNhc3NhbmRyYSB6ayB1cmwgaGFzIGJlZW4gc3BlY2lmaWVkIHVzZSBpdCB9fQogICAgLCJDQVNTQU5EUkFfWksiOiAie3tjYXNzYW5kcmEuemt9fSIKe3svY2Fzc2FuZHJhLnprfX0Ke3teY2Fzc2FuZHJhLnprfX0ge3shIGVsc2UsIGNyZWF0ZSBhIHVybCBiYXNlZCBvbiBjb252ZW50aW9uIGFuZCBjbHVzdGVyIG5hbWUgfX0KICAgICwiQ0FTU0FORFJBX1pLIjogInprOi8vbWFzdGVyLm1lc29zOjIxODEvY2Fzc2FuZHJhLW1lc29zL3t7Y2Fzc2FuZHJhLmNsdXN0ZXItbmFtZX19Igp7ey9jYXNzYW5kcmEuemt9fQp7eyNjYXNzYW5kcmEucmVzb3VyY2UuaGVhcC1tYn19CiwiQ0FTU0FORFJBX1JFU09VUkNFX0hFQVBfTUIiOiAie3tjYXNzYW5kcmEucmVzb3VyY2UuaGVhcC1tYn19Igp7ey9jYXNzYW5kcmEucmVzb3VyY2UuaGVhcC1tYn19Cnt7I2Nhc3NhbmRyYS5mcmFtZXdvcmsuYXV0aGVudGljYXRpb24ucHJpbmNpcGFsfX0KICAgICwiREVGQVVMVF9QUklOQ0lQQUwiOiAie3tjYXNzYW5kcmEuZnJhbWV3b3JrLmF1dGhlbnRpY2F0aW9uLnByaW5jaXBhbH19Igp7ey9jYXNzYW5kcmEuZnJhbWV3b3JrLmF1dGhlbnRpY2F0aW9uLnByaW5jaXBhbH19Cnt7I2Nhc3NhbmRyYS5mcmFtZXdvcmsuYXV0aGVudGljYXRpb24uc2VjcmV0fX0KICAgICwiREVGQVVMVF9TRUNSRVQiOiAie3tjYXNzYW5kcmEuZnJhbWV3b3JrLmF1dGhlbnRpY2F0aW9uLnNlY3JldH19Igp7ey9jYXNzYW5kcmEuZnJhbWV3b3JrLmF1dGhlbnRpY2F0aW9uLnNlY3JldH19CiAgfQp9Cg=="
      },
      "postInstallNotes": "Thank you for installing the Apache Cassandra DCOS Service.\n\n\tDocumentation: http://mesosphere.github.io/cassandra-mesos/\n\tIssues: https://github.com/mesosphere/cassandra-mesos/issues",
      "scm": "https://github.com/mesosphere/cassandra-mesos.git",
      "licenses": [
        {
          "url": "https://github.com/mesosphere/cassandra-mesos/blob/master/LICENSE.txt",
          "name": "Apache License Version 2.0"
        }
      ],
      "name": "cassandra",
      "packagingVersion": "2.0",
      "releaseVersion": 0,
      "description": "Apache Cassandra running on Apache Mesos",
      "resource": {
        "assets": {
          "uris": {
            "cassandra-mesos-0-2-0-1-tar-gz": "https://downloads.mesosphere.com/cassandra-mesos/artifacts/0.2.0-1/cassandra-mesos-0.2.0-1.tar.gz",
            "jre-7u76-linux-x64-tar-gz": "https://downloads.mesosphere.com/java/jre-7u76-linux-x64.tar.gz"
          }
        },
        "images": {
          "icon-large": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-large.png",
          "icon-small": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-small.png",
          "icon-medium": "https://downloads.mesosphere.com/cassandra-mesos/assets/cassandra-medium.png"
        }
      },
      "framework": true,
      "pip": [
        "dcos==0.1.13",
        "git+https://github.com/mesosphere/dcos-cassandra.git#dcos-cassandra=0.1.0"
      ],
      "maintainer": "support@mesosphere.io"
    }
  ]
}
